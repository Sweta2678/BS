/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the PublishStandardsExt service. Represents a row in the &quot;PUBLISH_STD&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ihg.brandstandards.db.model.impl.PublishStandardsExtModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ihg.brandstandards.db.model.impl.PublishStandardsExtImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see PublishStandardsExt
 * @see com.ihg.brandstandards.db.model.impl.PublishStandardsExtImpl
 * @see com.ihg.brandstandards.db.model.impl.PublishStandardsExtModelImpl
 * @generated
 */
public interface PublishStandardsExtModel extends BaseModel<PublishStandardsExt> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a Custom Query mapping to createlist of standards with translations. model instance should use the {@link PublishStandardsExt} interface instead.
	 */

	/**
	 * Returns the primary key of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the primary key of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param primaryKey the primary key of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the publish std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the publish std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getPublishStdId();

	/**
	 * Sets the publish std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param publishStdId the publish std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPublishStdId(long publishStdId);

	/**
	 * Returns the publish ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the publish ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getPublishId();

	/**
	 * Sets the publish ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param publishId the publish ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPublishId(long publishId);

	/**
	 * Returns the std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getStdId();

	/**
	 * Sets the std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param stdId the std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setStdId(long stdId);

	/**
	 * Returns the parent publish ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the parent publish ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getParentPublishId();

	/**
	 * Sets the parent publish ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param parentPublishId the parent publish ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setParentPublishId(long parentPublishId);

	/**
	 * Returns the std typ of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the std typ of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getStdTyp();

	/**
	 * Sets the std typ of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param stdTyp the std typ of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setStdTyp(String stdTyp);

	/**
	 * Returns the title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the title of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param title the title of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setTitle(String title);

	/**
	 * Returns the prev publish title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prev publish title of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getPrevPublishTitle();

	/**
	 * Sets the prev publish title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prevPublishTitle the prev publish title of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrevPublishTitle(String prevPublishTitle);

	/**
	 * Returns the description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the description of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param description the description of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setDescription(String description);

	/**
	 * Returns the prev description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prev description of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getPrevDescription();

	/**
	 * Sets the prev description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prevDescription the prev description of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrevDescription(String prevDescription);

	/**
	 * Returns the author of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the author of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getAuthor();

	/**
	 * Sets the author of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param author the author of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setAuthor(String author);

	/**
	 * Returns the business owner of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the business owner of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getBusinessOwner();

	/**
	 * Sets the business owner of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param businessOwner the business owner of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setBusinessOwner(String businessOwner);

	/**
	 * Returns the effective date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the effective date of this Custom Query mapping to createlist of standards with translations.
	 */
	public Date getEffectiveDate();

	/**
	 * Sets the effective date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param effectiveDate the effective date of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setEffectiveDate(Date effectiveDate);

	/**
	 * Returns the impl date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the impl date of this Custom Query mapping to createlist of standards with translations.
	 */
	public Date getImplDate();

	/**
	 * Sets the impl date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param implDate the impl date of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setImplDate(Date implDate);

	/**
	 * Returns the prev cmply date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prev cmply date of this Custom Query mapping to createlist of standards with translations.
	 */
	public Date getPrevCmplyDate();

	/**
	 * Sets the prev cmply date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prevCmplyDate the prev cmply date of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrevCmplyDate(Date prevCmplyDate);

	/**
	 * Returns the waiver of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the waiver of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getWaiver();

	/**
	 * Sets the waiver of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param waiver the waiver of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setWaiver(String waiver);

	/**
	 * Returns the status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the status of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param status the status of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setStatus(String status);

	/**
	 * Returns the category of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the category of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param category the category of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setCategory(String category);

	/**
	 * Returns the created by of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the created by of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getCreatedBy();

	/**
	 * Sets the created by of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param createdBy the created by of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setCreatedBy(String createdBy);

	/**
	 * Returns the change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the change of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getChange();

	/**
	 * Sets the change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param change the change of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setChange(String change);

	/**
	 * Returns the is global of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the is global of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getIsGlobal();

	/**
	 * Sets the is global of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param isGlobal the is global of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setIsGlobal(String isGlobal);

	/**
	 * Returns the region code of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the region code of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getRegionCode();

	/**
	 * Sets the region code of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param regionCode the region code of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setRegionCode(String regionCode);

	/**
	 * Returns the notes of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the notes of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getNotes();

	/**
	 * Sets the notes of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param notes the notes of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setNotes(String notes);

	/**
	 * Returns the framework of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the framework of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getFramework();

	/**
	 * Sets the framework of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param framework the framework of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setFramework(String framework);

	/**
	 * Returns the internal reference of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the internal reference of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getInternalReference();

	/**
	 * Sets the internal reference of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param internalReference the internal reference of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setInternalReference(String internalReference);

	/**
	 * Returns the region of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the region of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getRegion();

	/**
	 * Sets the region of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param region the region of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setRegion(String region);

	/**
	 * Returns the status identifier of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the status identifier of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getStatusIdentifier();

	/**
	 * Sets the status identifier of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param statusIdentifier the status identifier of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setStatusIdentifier(String statusIdentifier);

	/**
	 * Returns the sort order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the sort order of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getSortOrder();

	/**
	 * Sets the sort order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param sortOrder the sort order of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setSortOrder(long sortOrder);

	/**
	 * Returns the locale code of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the locale code of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getLocaleCode();

	/**
	 * Sets the locale code of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param localeCode the locale code of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setLocaleCode(String localeCode);

	/**
	 * Returns the taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getTaxonomyId();

	/**
	 * Sets the taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param taxonomyId the taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setTaxonomyId(long taxonomyId);

	/**
	 * Returns the prnt taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prnt taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getPrntTaxonomyId();

	/**
	 * Sets the prnt taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prntTaxonomyId the prnt taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrntTaxonomyId(long prntTaxonomyId);

	/**
	 * Returns the attachment exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the attachment exists of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getAttachmentExists();

	/**
	 * Sets the attachment exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param attachmentExists the attachment exists of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setAttachmentExists(String attachmentExists);

	/**
	 * Returns the attachment list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the attachment list of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getAttachmentList();

	/**
	 * Sets the attachment list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param attachmentList the attachment list of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setAttachmentList(String attachmentList);

	/**
	 * Returns the link exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the link exists of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getLinkExists();

	/**
	 * Sets the link exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param linkExists the link exists of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setLinkExists(String linkExists);

	/**
	 * Returns the link list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the link list of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getLinkList();

	/**
	 * Sets the link list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param linkList the link list of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setLinkList(String linkList);

	/**
	 * Returns the image exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the image exists of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getImageExists();

	/**
	 * Sets the image exists of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param imageExists the image exists of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setImageExists(String imageExists);

	/**
	 * Returns the std xref list std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the std xref list std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getStdXrefListStdId();

	/**
	 * Sets the std xref list std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param stdXrefListStdId the std xref list std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setStdXrefListStdId(String stdXrefListStdId);

	/**
	 * Returns the attachment status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the attachment status of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getAttachmentStatus();

	/**
	 * Sets the attachment status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param attachmentStatus the attachment status of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setAttachmentStatus(String attachmentStatus);

	/**
	 * Returns the link status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the link status of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getLinkStatus();

	/**
	 * Sets the link status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param linkStatus the link status of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setLinkStatus(String linkStatus);

	/**
	 * Returns the image status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the image status of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getImageStatus();

	/**
	 * Sets the image status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param imageStatus the image status of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setImageStatus(String imageStatus);

	/**
	 * Returns the image ID list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the image ID list of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getImageIdList();

	/**
	 * Sets the image ID list of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param imageIdList the image ID list of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setImageIdList(String imageIdList);

	/**
	 * Returns the index order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the index order of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getIndexOrder();

	/**
	 * Sets the index order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param indexOrder the index order of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setIndexOrder(long indexOrder);

	/**
	 * Returns the publish taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the publish taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getPublishTaxonomyId();

	/**
	 * Sets the publish taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param publishTaxonomyId the publish taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPublishTaxonomyId(long publishTaxonomyId);

	/**
	 * Returns the parent taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the parent taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getParentTaxonomyId();

	/**
	 * Sets the parent taxonomy ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param parentTaxonomyId the parent taxonomy ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setParentTaxonomyId(long parentTaxonomyId);

	/**
	 * Returns the index title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the index title of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getIndexTitle();

	/**
	 * Sets the index title of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param indexTitle the index title of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setIndexTitle(String indexTitle);

	/**
	 * Returns the index lvl of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the index lvl of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getIndexLvl();

	/**
	 * Sets the index lvl of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param indexLvl the index lvl of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setIndexLvl(long indexLvl);

	/**
	 * Returns the taxonomy path of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the taxonomy path of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getTaxonomyPath();

	/**
	 * Sets the taxonomy path of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param taxonomyPath the taxonomy path of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setTaxonomyPath(String taxonomyPath);

	/**
	 * Returns the level sort order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the level sort order of this Custom Query mapping to createlist of standards with translations.
	 */
	public long getLevelSortOrder();

	/**
	 * Sets the level sort order of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param levelSortOrder the level sort order of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setLevelSortOrder(long levelSortOrder);

	/**
	 * Returns the index description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the index description of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getIndexDescription();

	/**
	 * Sets the index description of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param indexDescription the index description of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setIndexDescription(String indexDescription);

	/**
	 * Returns the matched ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the matched ID of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getMatchedId();

	/**
	 * Sets the matched ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param matchedId the matched ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setMatchedId(String matchedId);

	/**
	 * Returns the expiry date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the expiry date of this Custom Query mapping to createlist of standards with translations.
	 */
	public Date getExpiryDate();

	/**
	 * Sets the expiry date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param expiryDate the expiry date of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setExpiryDate(Date expiryDate);

	/**
	 * Returns the prev expiry date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prev expiry date of this Custom Query mapping to createlist of standards with translations.
	 */
	public Date getPrevExpiryDate();

	/**
	 * Sets the prev expiry date of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prevExpiryDate the prev expiry date of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrevExpiryDate(Date prevExpiryDate);

	/**
	 * Returns the expired std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the expired std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getExpiredStdId();

	/**
	 * Sets the expired std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param expiredStdId the expired std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setExpiredStdId(String expiredStdId);

	/**
	 * Returns the flag std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the flag std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getFlagStdId();

	/**
	 * Sets the flag std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param flagStdId the flag std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setFlagStdId(String flagStdId);

	/**
	 * Returns the prev flag std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the prev flag std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getPrevFlagStdId();

	/**
	 * Sets the prev flag std ID of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param prevFlagStdId the prev flag std ID of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setPrevFlagStdId(String prevFlagStdId);

	/**
	 * Returns the title change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the title change of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getTitleChange();

	/**
	 * Sets the title change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param titleChange the title change of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setTitleChange(String titleChange);

	/**
	 * Returns the cmply change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the cmply change of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getCmplyChange();

	/**
	 * Sets the cmply change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param cmplyChange the cmply change of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setCmplyChange(String cmplyChange);

	/**
	 * Returns the expr change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the expr change of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getExprChange();

	/**
	 * Sets the expr change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param exprChange the expr change of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setExprChange(String exprChange);

	/**
	 * Returns the hlc change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the hlc change of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getHlcChange();

	/**
	 * Sets the hlc change of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param hlcChange the hlc change of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setHlcChange(String hlcChange);

	/**
	 * Returns the changed status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @return the changed status of this Custom Query mapping to createlist of standards with translations.
	 */
	@AutoEscape
	public String getChangedStatus();

	/**
	 * Sets the changed status of this Custom Query mapping to createlist of standards with translations..
	 *
	 * @param changedStatus the changed status of this Custom Query mapping to createlist of standards with translations.
	 */
	public void setChangedStatus(String changedStatus);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(PublishStandardsExt publishStandardsExt);

	@Override
	public int hashCode();

	@Override
	public CacheModel<PublishStandardsExt> toCacheModel();

	@Override
	public PublishStandardsExt toEscapedModel();

	@Override
	public PublishStandardsExt toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}