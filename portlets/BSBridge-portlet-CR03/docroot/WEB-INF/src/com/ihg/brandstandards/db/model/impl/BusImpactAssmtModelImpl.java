/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.BusImpactAssmt;
import com.ihg.brandstandards.db.model.BusImpactAssmtModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BusImpactAssmt service. Represents a row in the &quot;BUS_IMPACT_ASSMT_MNL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.BusImpactAssmtModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusImpactAssmtImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see BusImpactAssmtImpl
 * @see com.ihg.brandstandards.db.model.BusImpactAssmt
 * @see com.ihg.brandstandards.db.model.BusImpactAssmtModel
 * @generated
 */
public class BusImpactAssmtModelImpl extends BaseModelImpl<BusImpactAssmt>
	implements BusImpactAssmtModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bus impact assmt model instance should use the {@link com.ihg.brandstandards.db.model.BusImpactAssmt} interface instead.
	 */
	public static final String TABLE_NAME = "BUS_IMPACT_ASSMT_MNL";
	public static final Object[][] TABLE_COLUMNS = {
			{ "BUS_IMPACT_ASSMT_MNL_ID", Types.BIGINT },
			{ "STD_ID", Types.BIGINT },
			{ "CHAIN_CD", Types.VARCHAR },
			{ "RGN_CD", Types.VARCHAR },
			{ "PROFIT_LOSS_IMPACT_CD", Types.VARCHAR },
			{ "CAP_EXPENSE_IMPACT_CD", Types.VARCHAR },
			{ "IMPLMNT_TIMESCALE_CD", Types.VARCHAR },
			{ "CHG_FROM_RGN_TO_GBL_DESC", Types.VARCHAR },
			{ "CMT_TXT", Types.VARCHAR },
			{ "CREAT_USR_ID", Types.VARCHAR },
			{ "CREAT_TS", Types.TIMESTAMP },
			{ "LST_UPDT_USR_ID", Types.VARCHAR },
			{ "LST_UPDT_TS", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table BUS_IMPACT_ASSMT_MNL (BUS_IMPACT_ASSMT_MNL_ID LONG not null primary key,STD_ID LONG,CHAIN_CD VARCHAR(75) null,RGN_CD VARCHAR(75) null,PROFIT_LOSS_IMPACT_CD VARCHAR(75) null,CAP_EXPENSE_IMPACT_CD VARCHAR(75) null,IMPLMNT_TIMESCALE_CD VARCHAR(75) null,CHG_FROM_RGN_TO_GBL_DESC VARCHAR(75) null,CMT_TXT VARCHAR(75) null,CREAT_USR_ID VARCHAR(75) null,CREAT_TS DATE null,LST_UPDT_USR_ID VARCHAR(75) null,LST_UPDT_TS DATE null)";
	public static final String TABLE_SQL_DROP = "drop table BUS_IMPACT_ASSMT_MNL";
	public static final String ORDER_BY_JPQL = " ORDER BY busImpactAssmt.busImpactAssmtId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BUS_IMPACT_ASSMT_MNL.BUS_IMPACT_ASSMT_MNL_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.BusImpactAssmt"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.BusImpactAssmt"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.BusImpactAssmt"));

	public BusImpactAssmtModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _busImpactAssmtId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBusImpactAssmtId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _busImpactAssmtId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusImpactAssmt.class;
	}

	@Override
	public String getModelClassName() {
		return BusImpactAssmt.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("busImpactAssmtId", getBusImpactAssmtId());
		attributes.put("stdId", getStdId());
		attributes.put("chain", getChain());
		attributes.put("region", getRegion());
		attributes.put("profileLossImpact", getProfileLossImpact());
		attributes.put("CapExpenseImpact", getCapExpenseImpact());
		attributes.put("ImplTimeScale", getImplTimeScale());
		attributes.put("changeFromRegional", getChangeFromRegional());
		attributes.put("biaComments", getBiaComments());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long busImpactAssmtId = (Long)attributes.get("busImpactAssmtId");

		if (busImpactAssmtId != null) {
			setBusImpactAssmtId(busImpactAssmtId);
		}

		Long stdId = (Long)attributes.get("stdId");

		if (stdId != null) {
			setStdId(stdId);
		}

		String chain = (String)attributes.get("chain");

		if (chain != null) {
			setChain(chain);
		}

		String region = (String)attributes.get("region");

		if (region != null) {
			setRegion(region);
		}

		String profileLossImpact = (String)attributes.get("profileLossImpact");

		if (profileLossImpact != null) {
			setProfileLossImpact(profileLossImpact);
		}

		String CapExpenseImpact = (String)attributes.get("CapExpenseImpact");

		if (CapExpenseImpact != null) {
			setCapExpenseImpact(CapExpenseImpact);
		}

		String ImplTimeScale = (String)attributes.get("ImplTimeScale");

		if (ImplTimeScale != null) {
			setImplTimeScale(ImplTimeScale);
		}

		String changeFromRegional = (String)attributes.get("changeFromRegional");

		if (changeFromRegional != null) {
			setChangeFromRegional(changeFromRegional);
		}

		String biaComments = (String)attributes.get("biaComments");

		if (biaComments != null) {
			setBiaComments(biaComments);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public long getBusImpactAssmtId() {
		return _busImpactAssmtId;
	}

	@Override
	public void setBusImpactAssmtId(long busImpactAssmtId) {
		_busImpactAssmtId = busImpactAssmtId;
	}

	@Override
	public long getStdId() {
		return _stdId;
	}

	@Override
	public void setStdId(long stdId) {
		_stdId = stdId;
	}

	@Override
	public String getChain() {
		if (_chain == null) {
			return StringPool.BLANK;
		}
		else {
			return _chain;
		}
	}

	@Override
	public void setChain(String chain) {
		_chain = chain;
	}

	@Override
	public String getRegion() {
		if (_region == null) {
			return StringPool.BLANK;
		}
		else {
			return _region;
		}
	}

	@Override
	public void setRegion(String region) {
		_region = region;
	}

	@Override
	public String getProfileLossImpact() {
		if (_profileLossImpact == null) {
			return StringPool.BLANK;
		}
		else {
			return _profileLossImpact;
		}
	}

	@Override
	public void setProfileLossImpact(String profileLossImpact) {
		_profileLossImpact = profileLossImpact;
	}

	@Override
	public String getCapExpenseImpact() {
		if (_CapExpenseImpact == null) {
			return StringPool.BLANK;
		}
		else {
			return _CapExpenseImpact;
		}
	}

	@Override
	public void setCapExpenseImpact(String CapExpenseImpact) {
		_CapExpenseImpact = CapExpenseImpact;
	}

	@Override
	public String getImplTimeScale() {
		if (_ImplTimeScale == null) {
			return StringPool.BLANK;
		}
		else {
			return _ImplTimeScale;
		}
	}

	@Override
	public void setImplTimeScale(String ImplTimeScale) {
		_ImplTimeScale = ImplTimeScale;
	}

	@Override
	public String getChangeFromRegional() {
		if (_changeFromRegional == null) {
			return StringPool.BLANK;
		}
		else {
			return _changeFromRegional;
		}
	}

	@Override
	public void setChangeFromRegional(String changeFromRegional) {
		_changeFromRegional = changeFromRegional;
	}

	@Override
	public String getBiaComments() {
		if (_biaComments == null) {
			return StringPool.BLANK;
		}
		else {
			return _biaComments;
		}
	}

	@Override
	public void setBiaComments(String biaComments) {
		_biaComments = biaComments;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BusImpactAssmt.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BusImpactAssmt toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusImpactAssmt)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusImpactAssmtImpl busImpactAssmtImpl = new BusImpactAssmtImpl();

		busImpactAssmtImpl.setBusImpactAssmtId(getBusImpactAssmtId());
		busImpactAssmtImpl.setStdId(getStdId());
		busImpactAssmtImpl.setChain(getChain());
		busImpactAssmtImpl.setRegion(getRegion());
		busImpactAssmtImpl.setProfileLossImpact(getProfileLossImpact());
		busImpactAssmtImpl.setCapExpenseImpact(getCapExpenseImpact());
		busImpactAssmtImpl.setImplTimeScale(getImplTimeScale());
		busImpactAssmtImpl.setChangeFromRegional(getChangeFromRegional());
		busImpactAssmtImpl.setBiaComments(getBiaComments());
		busImpactAssmtImpl.setCreatorId(getCreatorId());
		busImpactAssmtImpl.setCreatedDate(getCreatedDate());
		busImpactAssmtImpl.setUpdatedBy(getUpdatedBy());
		busImpactAssmtImpl.setUpdatedDate(getUpdatedDate());

		busImpactAssmtImpl.resetOriginalValues();

		return busImpactAssmtImpl;
	}

	@Override
	public int compareTo(BusImpactAssmt busImpactAssmt) {
		long primaryKey = busImpactAssmt.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusImpactAssmt)) {
			return false;
		}

		BusImpactAssmt busImpactAssmt = (BusImpactAssmt)obj;

		long primaryKey = busImpactAssmt.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<BusImpactAssmt> toCacheModel() {
		BusImpactAssmtCacheModel busImpactAssmtCacheModel = new BusImpactAssmtCacheModel();

		busImpactAssmtCacheModel.busImpactAssmtId = getBusImpactAssmtId();

		busImpactAssmtCacheModel.stdId = getStdId();

		busImpactAssmtCacheModel.chain = getChain();

		String chain = busImpactAssmtCacheModel.chain;

		if ((chain != null) && (chain.length() == 0)) {
			busImpactAssmtCacheModel.chain = null;
		}

		busImpactAssmtCacheModel.region = getRegion();

		String region = busImpactAssmtCacheModel.region;

		if ((region != null) && (region.length() == 0)) {
			busImpactAssmtCacheModel.region = null;
		}

		busImpactAssmtCacheModel.profileLossImpact = getProfileLossImpact();

		String profileLossImpact = busImpactAssmtCacheModel.profileLossImpact;

		if ((profileLossImpact != null) && (profileLossImpact.length() == 0)) {
			busImpactAssmtCacheModel.profileLossImpact = null;
		}

		busImpactAssmtCacheModel.CapExpenseImpact = getCapExpenseImpact();

		String CapExpenseImpact = busImpactAssmtCacheModel.CapExpenseImpact;

		if ((CapExpenseImpact != null) && (CapExpenseImpact.length() == 0)) {
			busImpactAssmtCacheModel.CapExpenseImpact = null;
		}

		busImpactAssmtCacheModel.ImplTimeScale = getImplTimeScale();

		String ImplTimeScale = busImpactAssmtCacheModel.ImplTimeScale;

		if ((ImplTimeScale != null) && (ImplTimeScale.length() == 0)) {
			busImpactAssmtCacheModel.ImplTimeScale = null;
		}

		busImpactAssmtCacheModel.changeFromRegional = getChangeFromRegional();

		String changeFromRegional = busImpactAssmtCacheModel.changeFromRegional;

		if ((changeFromRegional != null) && (changeFromRegional.length() == 0)) {
			busImpactAssmtCacheModel.changeFromRegional = null;
		}

		busImpactAssmtCacheModel.biaComments = getBiaComments();

		String biaComments = busImpactAssmtCacheModel.biaComments;

		if ((biaComments != null) && (biaComments.length() == 0)) {
			busImpactAssmtCacheModel.biaComments = null;
		}

		busImpactAssmtCacheModel.creatorId = getCreatorId();

		String creatorId = busImpactAssmtCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			busImpactAssmtCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			busImpactAssmtCacheModel.createdDate = createdDate.getTime();
		}
		else {
			busImpactAssmtCacheModel.createdDate = Long.MIN_VALUE;
		}

		busImpactAssmtCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = busImpactAssmtCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			busImpactAssmtCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			busImpactAssmtCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			busImpactAssmtCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return busImpactAssmtCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{busImpactAssmtId=");
		sb.append(getBusImpactAssmtId());
		sb.append(", stdId=");
		sb.append(getStdId());
		sb.append(", chain=");
		sb.append(getChain());
		sb.append(", region=");
		sb.append(getRegion());
		sb.append(", profileLossImpact=");
		sb.append(getProfileLossImpact());
		sb.append(", CapExpenseImpact=");
		sb.append(getCapExpenseImpact());
		sb.append(", ImplTimeScale=");
		sb.append(getImplTimeScale());
		sb.append(", changeFromRegional=");
		sb.append(getChangeFromRegional());
		sb.append(", biaComments=");
		sb.append(getBiaComments());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.BusImpactAssmt");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>busImpactAssmtId</column-name><column-value><![CDATA[");
		sb.append(getBusImpactAssmtId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stdId</column-name><column-value><![CDATA[");
		sb.append(getStdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chain</column-name><column-value><![CDATA[");
		sb.append(getChain());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>region</column-name><column-value><![CDATA[");
		sb.append(getRegion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileLossImpact</column-name><column-value><![CDATA[");
		sb.append(getProfileLossImpact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CapExpenseImpact</column-name><column-value><![CDATA[");
		sb.append(getCapExpenseImpact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ImplTimeScale</column-name><column-value><![CDATA[");
		sb.append(getImplTimeScale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changeFromRegional</column-name><column-value><![CDATA[");
		sb.append(getChangeFromRegional());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biaComments</column-name><column-value><![CDATA[");
		sb.append(getBiaComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BusImpactAssmt.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BusImpactAssmt.class
		};
	private long _busImpactAssmtId;
	private long _stdId;
	private String _chain;
	private String _region;
	private String _profileLossImpact;
	private String _CapExpenseImpact;
	private String _ImplTimeScale;
	private String _changeFromRegional;
	private String _biaComments;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private BusImpactAssmt _escapedModel;
}