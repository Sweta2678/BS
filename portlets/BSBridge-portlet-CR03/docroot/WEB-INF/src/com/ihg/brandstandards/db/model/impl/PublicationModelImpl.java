/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.Publication;
import com.ihg.brandstandards.db.model.PublicationModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Publication service. Represents a row in the &quot;PUBLISH&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.PublicationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PublicationImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see PublicationImpl
 * @see com.ihg.brandstandards.db.model.Publication
 * @see com.ihg.brandstandards.db.model.PublicationModel
 * @generated
 */
public class PublicationModelImpl extends BaseModelImpl<Publication>
	implements PublicationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a publication model instance should use the {@link com.ihg.brandstandards.db.model.Publication} interface instead.
	 */
	public static final String TABLE_NAME = "PUBLISH";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PUBLISH_ID", Types.BIGINT },
			{ "PUBLISH_VER_ID", Types.BIGINT },
			{ "PUBLISH_STAT_CD", Types.VARCHAR },
			{ "CHAIN_CD", Types.VARCHAR },
			{ "PUBLISH_ENVIRONMENT_NM", Types.VARCHAR },
			{ "PUBLISHED_LOCALE_LIST_TXT", Types.VARCHAR },
			{ "PUBLISH_DT", Types.TIMESTAMP },
			{ "PUBLISH_CONTENT_TYP", Types.VARCHAR },
			{ "PRNT_PUBLISH_ID", Types.BIGINT },
			{ "VLD_XLAT_IND", Types.VARCHAR },
			{ "CREAT_USR_ID", Types.VARCHAR },
			{ "CREAT_TS", Types.TIMESTAMP },
			{ "LST_UPDT_USR_ID", Types.VARCHAR },
			{ "LST_UPDT_TS", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table PUBLISH (PUBLISH_ID LONG not null primary key,PUBLISH_VER_ID LONG,PUBLISH_STAT_CD VARCHAR(75) null,CHAIN_CD VARCHAR(75) null,PUBLISH_ENVIRONMENT_NM VARCHAR(75) null,PUBLISHED_LOCALE_LIST_TXT VARCHAR(75) null,PUBLISH_DT DATE null,PUBLISH_CONTENT_TYP VARCHAR(75) null,PRNT_PUBLISH_ID LONG,VLD_XLAT_IND VARCHAR(75) null,CREAT_USR_ID VARCHAR(75) null,CREAT_TS DATE null,LST_UPDT_USR_ID VARCHAR(75) null,LST_UPDT_TS DATE null)";
	public static final String TABLE_SQL_DROP = "drop table PUBLISH";
	public static final String ORDER_BY_JPQL = " ORDER BY publication.publishId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PUBLISH.PUBLISH_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.Publication"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.Publication"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.Publication"),
			true);
	public static long CHAINCODE_COLUMN_BITMASK = 1L;
	public static long PUBLISHENVNAME_COLUMN_BITMASK = 2L;
	public static long PUBLISHSTATCD_COLUMN_BITMASK = 4L;
	public static long PUBLISHID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.Publication"));

	public PublicationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _publishId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPublishId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _publishId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Publication.class;
	}

	@Override
	public String getModelClassName() {
		return Publication.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("publishId", getPublishId());
		attributes.put("publishVerId", getPublishVerId());
		attributes.put("publishStatCd", getPublishStatCd());
		attributes.put("chainCode", getChainCode());
		attributes.put("publishEnvName", getPublishEnvName());
		attributes.put("publishLocaleList", getPublishLocaleList());
		attributes.put("publishDate", getPublishDate());
		attributes.put("publishContentType", getPublishContentType());
		attributes.put("parentPublishId", getParentPublishId());
		attributes.put("validateTranslation", getValidateTranslation());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long publishId = (Long)attributes.get("publishId");

		if (publishId != null) {
			setPublishId(publishId);
		}

		Long publishVerId = (Long)attributes.get("publishVerId");

		if (publishVerId != null) {
			setPublishVerId(publishVerId);
		}

		String publishStatCd = (String)attributes.get("publishStatCd");

		if (publishStatCd != null) {
			setPublishStatCd(publishStatCd);
		}

		String chainCode = (String)attributes.get("chainCode");

		if (chainCode != null) {
			setChainCode(chainCode);
		}

		String publishEnvName = (String)attributes.get("publishEnvName");

		if (publishEnvName != null) {
			setPublishEnvName(publishEnvName);
		}

		String publishLocaleList = (String)attributes.get("publishLocaleList");

		if (publishLocaleList != null) {
			setPublishLocaleList(publishLocaleList);
		}

		Date publishDate = (Date)attributes.get("publishDate");

		if (publishDate != null) {
			setPublishDate(publishDate);
		}

		String publishContentType = (String)attributes.get("publishContentType");

		if (publishContentType != null) {
			setPublishContentType(publishContentType);
		}

		Long parentPublishId = (Long)attributes.get("parentPublishId");

		if (parentPublishId != null) {
			setParentPublishId(parentPublishId);
		}

		String validateTranslation = (String)attributes.get(
				"validateTranslation");

		if (validateTranslation != null) {
			setValidateTranslation(validateTranslation);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public long getPublishId() {
		return _publishId;
	}

	@Override
	public void setPublishId(long publishId) {
		_publishId = publishId;
	}

	@Override
	public long getPublishVerId() {
		return _publishVerId;
	}

	@Override
	public void setPublishVerId(long publishVerId) {
		_publishVerId = publishVerId;
	}

	@Override
	public String getPublishStatCd() {
		if (_publishStatCd == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishStatCd;
		}
	}

	@Override
	public void setPublishStatCd(String publishStatCd) {
		_columnBitmask |= PUBLISHSTATCD_COLUMN_BITMASK;

		if (_originalPublishStatCd == null) {
			_originalPublishStatCd = _publishStatCd;
		}

		_publishStatCd = publishStatCd;
	}

	public String getOriginalPublishStatCd() {
		return GetterUtil.getString(_originalPublishStatCd);
	}

	@Override
	public String getChainCode() {
		if (_chainCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _chainCode;
		}
	}

	@Override
	public void setChainCode(String chainCode) {
		_columnBitmask |= CHAINCODE_COLUMN_BITMASK;

		if (_originalChainCode == null) {
			_originalChainCode = _chainCode;
		}

		_chainCode = chainCode;
	}

	public String getOriginalChainCode() {
		return GetterUtil.getString(_originalChainCode);
	}

	@Override
	public String getPublishEnvName() {
		if (_publishEnvName == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishEnvName;
		}
	}

	@Override
	public void setPublishEnvName(String publishEnvName) {
		_columnBitmask |= PUBLISHENVNAME_COLUMN_BITMASK;

		if (_originalPublishEnvName == null) {
			_originalPublishEnvName = _publishEnvName;
		}

		_publishEnvName = publishEnvName;
	}

	public String getOriginalPublishEnvName() {
		return GetterUtil.getString(_originalPublishEnvName);
	}

	@Override
	public String getPublishLocaleList() {
		if (_publishLocaleList == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishLocaleList;
		}
	}

	@Override
	public void setPublishLocaleList(String publishLocaleList) {
		_publishLocaleList = publishLocaleList;
	}

	@Override
	public Date getPublishDate() {
		return _publishDate;
	}

	@Override
	public void setPublishDate(Date publishDate) {
		_publishDate = publishDate;
	}

	@Override
	public String getPublishContentType() {
		if (_publishContentType == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishContentType;
		}
	}

	@Override
	public void setPublishContentType(String publishContentType) {
		_publishContentType = publishContentType;
	}

	@Override
	public long getParentPublishId() {
		return _parentPublishId;
	}

	@Override
	public void setParentPublishId(long parentPublishId) {
		_parentPublishId = parentPublishId;
	}

	@Override
	public String getValidateTranslation() {
		if (_validateTranslation == null) {
			return StringPool.BLANK;
		}
		else {
			return _validateTranslation;
		}
	}

	@Override
	public void setValidateTranslation(String validateTranslation) {
		_validateTranslation = validateTranslation;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Publication.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Publication toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Publication)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PublicationImpl publicationImpl = new PublicationImpl();

		publicationImpl.setPublishId(getPublishId());
		publicationImpl.setPublishVerId(getPublishVerId());
		publicationImpl.setPublishStatCd(getPublishStatCd());
		publicationImpl.setChainCode(getChainCode());
		publicationImpl.setPublishEnvName(getPublishEnvName());
		publicationImpl.setPublishLocaleList(getPublishLocaleList());
		publicationImpl.setPublishDate(getPublishDate());
		publicationImpl.setPublishContentType(getPublishContentType());
		publicationImpl.setParentPublishId(getParentPublishId());
		publicationImpl.setValidateTranslation(getValidateTranslation());
		publicationImpl.setCreatorId(getCreatorId());
		publicationImpl.setCreatedDate(getCreatedDate());
		publicationImpl.setUpdatedBy(getUpdatedBy());
		publicationImpl.setUpdatedDate(getUpdatedDate());

		publicationImpl.resetOriginalValues();

		return publicationImpl;
	}

	@Override
	public int compareTo(Publication publication) {
		long primaryKey = publication.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Publication)) {
			return false;
		}

		Publication publication = (Publication)obj;

		long primaryKey = publication.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PublicationModelImpl publicationModelImpl = this;

		publicationModelImpl._originalPublishStatCd = publicationModelImpl._publishStatCd;

		publicationModelImpl._originalChainCode = publicationModelImpl._chainCode;

		publicationModelImpl._originalPublishEnvName = publicationModelImpl._publishEnvName;

		publicationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Publication> toCacheModel() {
		PublicationCacheModel publicationCacheModel = new PublicationCacheModel();

		publicationCacheModel.publishId = getPublishId();

		publicationCacheModel.publishVerId = getPublishVerId();

		publicationCacheModel.publishStatCd = getPublishStatCd();

		String publishStatCd = publicationCacheModel.publishStatCd;

		if ((publishStatCd != null) && (publishStatCd.length() == 0)) {
			publicationCacheModel.publishStatCd = null;
		}

		publicationCacheModel.chainCode = getChainCode();

		String chainCode = publicationCacheModel.chainCode;

		if ((chainCode != null) && (chainCode.length() == 0)) {
			publicationCacheModel.chainCode = null;
		}

		publicationCacheModel.publishEnvName = getPublishEnvName();

		String publishEnvName = publicationCacheModel.publishEnvName;

		if ((publishEnvName != null) && (publishEnvName.length() == 0)) {
			publicationCacheModel.publishEnvName = null;
		}

		publicationCacheModel.publishLocaleList = getPublishLocaleList();

		String publishLocaleList = publicationCacheModel.publishLocaleList;

		if ((publishLocaleList != null) && (publishLocaleList.length() == 0)) {
			publicationCacheModel.publishLocaleList = null;
		}

		Date publishDate = getPublishDate();

		if (publishDate != null) {
			publicationCacheModel.publishDate = publishDate.getTime();
		}
		else {
			publicationCacheModel.publishDate = Long.MIN_VALUE;
		}

		publicationCacheModel.publishContentType = getPublishContentType();

		String publishContentType = publicationCacheModel.publishContentType;

		if ((publishContentType != null) && (publishContentType.length() == 0)) {
			publicationCacheModel.publishContentType = null;
		}

		publicationCacheModel.parentPublishId = getParentPublishId();

		publicationCacheModel.validateTranslation = getValidateTranslation();

		String validateTranslation = publicationCacheModel.validateTranslation;

		if ((validateTranslation != null) &&
				(validateTranslation.length() == 0)) {
			publicationCacheModel.validateTranslation = null;
		}

		publicationCacheModel.creatorId = getCreatorId();

		String creatorId = publicationCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			publicationCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			publicationCacheModel.createdDate = createdDate.getTime();
		}
		else {
			publicationCacheModel.createdDate = Long.MIN_VALUE;
		}

		publicationCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = publicationCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			publicationCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			publicationCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			publicationCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return publicationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{publishId=");
		sb.append(getPublishId());
		sb.append(", publishVerId=");
		sb.append(getPublishVerId());
		sb.append(", publishStatCd=");
		sb.append(getPublishStatCd());
		sb.append(", chainCode=");
		sb.append(getChainCode());
		sb.append(", publishEnvName=");
		sb.append(getPublishEnvName());
		sb.append(", publishLocaleList=");
		sb.append(getPublishLocaleList());
		sb.append(", publishDate=");
		sb.append(getPublishDate());
		sb.append(", publishContentType=");
		sb.append(getPublishContentType());
		sb.append(", parentPublishId=");
		sb.append(getParentPublishId());
		sb.append(", validateTranslation=");
		sb.append(getValidateTranslation());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.Publication");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>publishId</column-name><column-value><![CDATA[");
		sb.append(getPublishId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishVerId</column-name><column-value><![CDATA[");
		sb.append(getPublishVerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishStatCd</column-name><column-value><![CDATA[");
		sb.append(getPublishStatCd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chainCode</column-name><column-value><![CDATA[");
		sb.append(getChainCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishEnvName</column-name><column-value><![CDATA[");
		sb.append(getPublishEnvName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishLocaleList</column-name><column-value><![CDATA[");
		sb.append(getPublishLocaleList());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishDate</column-name><column-value><![CDATA[");
		sb.append(getPublishDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishContentType</column-name><column-value><![CDATA[");
		sb.append(getPublishContentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentPublishId</column-name><column-value><![CDATA[");
		sb.append(getParentPublishId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validateTranslation</column-name><column-value><![CDATA[");
		sb.append(getValidateTranslation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Publication.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Publication.class
		};
	private long _publishId;
	private long _publishVerId;
	private String _publishStatCd;
	private String _originalPublishStatCd;
	private String _chainCode;
	private String _originalChainCode;
	private String _publishEnvName;
	private String _originalPublishEnvName;
	private String _publishLocaleList;
	private Date _publishDate;
	private String _publishContentType;
	private long _parentPublishId;
	private String _validateTranslation;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private long _columnBitmask;
	private Publication _escapedModel;
}