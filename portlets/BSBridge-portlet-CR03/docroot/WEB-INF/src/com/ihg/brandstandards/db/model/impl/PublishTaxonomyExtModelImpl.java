/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.PublishTaxonomyExt;
import com.ihg.brandstandards.db.model.PublishTaxonomyExtModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PublishTaxonomyExt service. Represents a row in the &quot;PUBLISH_TAXONOMY&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.PublishTaxonomyExtModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PublishTaxonomyExtImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see PublishTaxonomyExtImpl
 * @see com.ihg.brandstandards.db.model.PublishTaxonomyExt
 * @see com.ihg.brandstandards.db.model.PublishTaxonomyExtModel
 * @generated
 */
public class PublishTaxonomyExtModelImpl extends BaseModelImpl<PublishTaxonomyExt>
	implements PublishTaxonomyExtModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Custom Query mapping to create index path. model instance should use the {@link com.ihg.brandstandards.db.model.PublishTaxonomyExt} interface instead.
	 */
	public static final String TABLE_NAME = "PUBLISH_TAXONOMY";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PUBLISH_TAXONOMY_ID", Types.BIGINT },
			{ "PRNT_PUBLISH_TAXONOMY_ID", Types.BIGINT },
			{ "TITLE_TXT", Types.VARCHAR },
			{ "LVL", Types.VARCHAR },
			{ "PATH", Types.VARCHAR },
			{ "HIER_LVL_NBR", Types.BIGINT },
			{ "PUBLISH_ID", Types.BIGINT },
			{ "INDX_ORDER", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table PUBLISH_TAXONOMY (PUBLISH_TAXONOMY_ID LONG not null primary key,PRNT_PUBLISH_TAXONOMY_ID LONG,TITLE_TXT VARCHAR(75) null,LVL VARCHAR(75) null,PATH VARCHAR(75) null,HIER_LVL_NBR LONG,PUBLISH_ID LONG,INDX_ORDER LONG)";
	public static final String TABLE_SQL_DROP = "drop table PUBLISH_TAXONOMY";
	public static final String ORDER_BY_JPQL = " ORDER BY publishTaxonomyExt.publishTaxId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PUBLISH_TAXONOMY.PUBLISH_TAXONOMY_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.PublishTaxonomyExt"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.PublishTaxonomyExt"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.PublishTaxonomyExt"),
			true);
	public static long PUBLISHTAXID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.PublishTaxonomyExt"));

	public PublishTaxonomyExtModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _publishTaxId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPublishTaxId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _publishTaxId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PublishTaxonomyExt.class;
	}

	@Override
	public String getModelClassName() {
		return PublishTaxonomyExt.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("publishTaxId", getPublishTaxId());
		attributes.put("publishParentId", getPublishParentId());
		attributes.put("title", getTitle());
		attributes.put("lvl", getLvl());
		attributes.put("path", getPath());
		attributes.put("levelSortOrder", getLevelSortOrder());
		attributes.put("publishId", getPublishId());
		attributes.put("indexOrder", getIndexOrder());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long publishTaxId = (Long)attributes.get("publishTaxId");

		if (publishTaxId != null) {
			setPublishTaxId(publishTaxId);
		}

		Long publishParentId = (Long)attributes.get("publishParentId");

		if (publishParentId != null) {
			setPublishParentId(publishParentId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String lvl = (String)attributes.get("lvl");

		if (lvl != null) {
			setLvl(lvl);
		}

		String path = (String)attributes.get("path");

		if (path != null) {
			setPath(path);
		}

		Long levelSortOrder = (Long)attributes.get("levelSortOrder");

		if (levelSortOrder != null) {
			setLevelSortOrder(levelSortOrder);
		}

		Long publishId = (Long)attributes.get("publishId");

		if (publishId != null) {
			setPublishId(publishId);
		}

		Long indexOrder = (Long)attributes.get("indexOrder");

		if (indexOrder != null) {
			setIndexOrder(indexOrder);
		}
	}

	@Override
	public long getPublishTaxId() {
		return _publishTaxId;
	}

	@Override
	public void setPublishTaxId(long publishTaxId) {
		_columnBitmask |= PUBLISHTAXID_COLUMN_BITMASK;

		if (!_setOriginalPublishTaxId) {
			_setOriginalPublishTaxId = true;

			_originalPublishTaxId = _publishTaxId;
		}

		_publishTaxId = publishTaxId;
	}

	public long getOriginalPublishTaxId() {
		return _originalPublishTaxId;
	}

	@Override
	public long getPublishParentId() {
		return _publishParentId;
	}

	@Override
	public void setPublishParentId(long publishParentId) {
		_publishParentId = publishParentId;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getLvl() {
		if (_lvl == null) {
			return StringPool.BLANK;
		}
		else {
			return _lvl;
		}
	}

	@Override
	public void setLvl(String lvl) {
		_lvl = lvl;
	}

	@Override
	public String getPath() {
		if (_path == null) {
			return StringPool.BLANK;
		}
		else {
			return _path;
		}
	}

	@Override
	public void setPath(String path) {
		_path = path;
	}

	@Override
	public long getLevelSortOrder() {
		return _levelSortOrder;
	}

	@Override
	public void setLevelSortOrder(long levelSortOrder) {
		_levelSortOrder = levelSortOrder;
	}

	@Override
	public long getPublishId() {
		return _publishId;
	}

	@Override
	public void setPublishId(long publishId) {
		_publishId = publishId;
	}

	@Override
	public long getIndexOrder() {
		return _indexOrder;
	}

	@Override
	public void setIndexOrder(long indexOrder) {
		_indexOrder = indexOrder;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			PublishTaxonomyExt.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PublishTaxonomyExt toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PublishTaxonomyExt)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PublishTaxonomyExtImpl publishTaxonomyExtImpl = new PublishTaxonomyExtImpl();

		publishTaxonomyExtImpl.setPublishTaxId(getPublishTaxId());
		publishTaxonomyExtImpl.setPublishParentId(getPublishParentId());
		publishTaxonomyExtImpl.setTitle(getTitle());
		publishTaxonomyExtImpl.setLvl(getLvl());
		publishTaxonomyExtImpl.setPath(getPath());
		publishTaxonomyExtImpl.setLevelSortOrder(getLevelSortOrder());
		publishTaxonomyExtImpl.setPublishId(getPublishId());
		publishTaxonomyExtImpl.setIndexOrder(getIndexOrder());

		publishTaxonomyExtImpl.resetOriginalValues();

		return publishTaxonomyExtImpl;
	}

	@Override
	public int compareTo(PublishTaxonomyExt publishTaxonomyExt) {
		long primaryKey = publishTaxonomyExt.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PublishTaxonomyExt)) {
			return false;
		}

		PublishTaxonomyExt publishTaxonomyExt = (PublishTaxonomyExt)obj;

		long primaryKey = publishTaxonomyExt.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PublishTaxonomyExtModelImpl publishTaxonomyExtModelImpl = this;

		publishTaxonomyExtModelImpl._originalPublishTaxId = publishTaxonomyExtModelImpl._publishTaxId;

		publishTaxonomyExtModelImpl._setOriginalPublishTaxId = false;

		publishTaxonomyExtModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PublishTaxonomyExt> toCacheModel() {
		PublishTaxonomyExtCacheModel publishTaxonomyExtCacheModel = new PublishTaxonomyExtCacheModel();

		publishTaxonomyExtCacheModel.publishTaxId = getPublishTaxId();

		publishTaxonomyExtCacheModel.publishParentId = getPublishParentId();

		publishTaxonomyExtCacheModel.title = getTitle();

		String title = publishTaxonomyExtCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			publishTaxonomyExtCacheModel.title = null;
		}

		publishTaxonomyExtCacheModel.lvl = getLvl();

		String lvl = publishTaxonomyExtCacheModel.lvl;

		if ((lvl != null) && (lvl.length() == 0)) {
			publishTaxonomyExtCacheModel.lvl = null;
		}

		publishTaxonomyExtCacheModel.path = getPath();

		String path = publishTaxonomyExtCacheModel.path;

		if ((path != null) && (path.length() == 0)) {
			publishTaxonomyExtCacheModel.path = null;
		}

		publishTaxonomyExtCacheModel.levelSortOrder = getLevelSortOrder();

		publishTaxonomyExtCacheModel.publishId = getPublishId();

		publishTaxonomyExtCacheModel.indexOrder = getIndexOrder();

		return publishTaxonomyExtCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{publishTaxId=");
		sb.append(getPublishTaxId());
		sb.append(", publishParentId=");
		sb.append(getPublishParentId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", lvl=");
		sb.append(getLvl());
		sb.append(", path=");
		sb.append(getPath());
		sb.append(", levelSortOrder=");
		sb.append(getLevelSortOrder());
		sb.append(", publishId=");
		sb.append(getPublishId());
		sb.append(", indexOrder=");
		sb.append(getIndexOrder());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.PublishTaxonomyExt");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>publishTaxId</column-name><column-value><![CDATA[");
		sb.append(getPublishTaxId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishParentId</column-name><column-value><![CDATA[");
		sb.append(getPublishParentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lvl</column-name><column-value><![CDATA[");
		sb.append(getLvl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>path</column-name><column-value><![CDATA[");
		sb.append(getPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelSortOrder</column-name><column-value><![CDATA[");
		sb.append(getLevelSortOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishId</column-name><column-value><![CDATA[");
		sb.append(getPublishId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indexOrder</column-name><column-value><![CDATA[");
		sb.append(getIndexOrder());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PublishTaxonomyExt.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PublishTaxonomyExt.class
		};
	private long _publishTaxId;
	private long _originalPublishTaxId;
	private boolean _setOriginalPublishTaxId;
	private long _publishParentId;
	private String _title;
	private String _lvl;
	private String _path;
	private long _levelSortOrder;
	private long _publishId;
	private long _indexOrder;
	private long _columnBitmask;
	private PublishTaxonomyExt _escapedModel;
}