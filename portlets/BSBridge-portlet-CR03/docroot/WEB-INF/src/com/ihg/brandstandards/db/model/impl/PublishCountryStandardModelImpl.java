/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.PublishCountryStandard;
import com.ihg.brandstandards.db.model.PublishCountryStandardModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PublishCountryStandard service. Represents a row in the &quot;PUBLISH_CTRY_STD&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.PublishCountryStandardModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PublishCountryStandardImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see PublishCountryStandardImpl
 * @see com.ihg.brandstandards.db.model.PublishCountryStandard
 * @see com.ihg.brandstandards.db.model.PublishCountryStandardModel
 * @generated
 */
public class PublishCountryStandardModelImpl extends BaseModelImpl<PublishCountryStandard>
	implements PublishCountryStandardModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a publish country standard model instance should use the {@link com.ihg.brandstandards.db.model.PublishCountryStandard} interface instead.
	 */
	public static final String TABLE_NAME = "PUBLISH_CTRY_STD";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PUBLISH_CTRY_STD_ID", Types.VARCHAR },
			{ "PUBLISH_STD_VER_ID", Types.BIGINT },
			{ "CTRY_NM_CD", Types.VARCHAR },
			{ "EXPIRED_BY_REF_TXT", Types.VARCHAR },
			{ "PUBLISH_STAT_CD", Types.VARCHAR },
			{ "STD_CMPLY_DEADLINE_DT", Types.TIMESTAMP },
			{ "DISP_ORDER_NBR", Types.BIGINT },
			{ "CREAT_USR_ID", Types.VARCHAR },
			{ "CREAT_TS", Types.TIMESTAMP },
			{ "LST_UPDT_USR_ID", Types.VARCHAR },
			{ "LST_UPDT_TS", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table PUBLISH_CTRY_STD (PUBLISH_CTRY_STD_ID VARCHAR(75) not null primary key,PUBLISH_STD_VER_ID LONG,CTRY_NM_CD VARCHAR(75) null,EXPIRED_BY_REF_TXT VARCHAR(75) null,PUBLISH_STAT_CD VARCHAR(75) null,STD_CMPLY_DEADLINE_DT DATE null,DISP_ORDER_NBR LONG,CREAT_USR_ID VARCHAR(75) null,CREAT_TS DATE null,LST_UPDT_USR_ID VARCHAR(75) null,LST_UPDT_TS DATE null)";
	public static final String TABLE_SQL_DROP = "drop table PUBLISH_CTRY_STD";
	public static final String ORDER_BY_JPQL = " ORDER BY publishCountryStandard.publishCountryStdId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PUBLISH_CTRY_STD.PUBLISH_CTRY_STD_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.PublishCountryStandard"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.PublishCountryStandard"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.PublishCountryStandard"),
			true);
	public static long COUNTRYCODE_COLUMN_BITMASK = 1L;
	public static long PUBLISHCOUNTRYSTDID_COLUMN_BITMASK = 2L;
	public static long PUBLISHVERID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.PublishCountryStandard"));

	public PublishCountryStandardModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _publishCountryStdId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setPublishCountryStdId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _publishCountryStdId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return PublishCountryStandard.class;
	}

	@Override
	public String getModelClassName() {
		return PublishCountryStandard.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("publishCountryStdId", getPublishCountryStdId());
		attributes.put("publishVerId", getPublishVerId());
		attributes.put("countryCode", getCountryCode());
		attributes.put("expiredRefTxt", getExpiredRefTxt());
		attributes.put("publishStatCode", getPublishStatCode());
		attributes.put("stdComplyDeadlineDate", getStdComplyDeadlineDate());
		attributes.put("orderNumber", getOrderNumber());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String publishCountryStdId = (String)attributes.get(
				"publishCountryStdId");

		if (publishCountryStdId != null) {
			setPublishCountryStdId(publishCountryStdId);
		}

		Long publishVerId = (Long)attributes.get("publishVerId");

		if (publishVerId != null) {
			setPublishVerId(publishVerId);
		}

		String countryCode = (String)attributes.get("countryCode");

		if (countryCode != null) {
			setCountryCode(countryCode);
		}

		String expiredRefTxt = (String)attributes.get("expiredRefTxt");

		if (expiredRefTxt != null) {
			setExpiredRefTxt(expiredRefTxt);
		}

		String publishStatCode = (String)attributes.get("publishStatCode");

		if (publishStatCode != null) {
			setPublishStatCode(publishStatCode);
		}

		Date stdComplyDeadlineDate = (Date)attributes.get(
				"stdComplyDeadlineDate");

		if (stdComplyDeadlineDate != null) {
			setStdComplyDeadlineDate(stdComplyDeadlineDate);
		}

		Long orderNumber = (Long)attributes.get("orderNumber");

		if (orderNumber != null) {
			setOrderNumber(orderNumber);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public String getPublishCountryStdId() {
		if (_publishCountryStdId == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishCountryStdId;
		}
	}

	@Override
	public void setPublishCountryStdId(String publishCountryStdId) {
		_columnBitmask |= PUBLISHCOUNTRYSTDID_COLUMN_BITMASK;

		if (_originalPublishCountryStdId == null) {
			_originalPublishCountryStdId = _publishCountryStdId;
		}

		_publishCountryStdId = publishCountryStdId;
	}

	public String getOriginalPublishCountryStdId() {
		return GetterUtil.getString(_originalPublishCountryStdId);
	}

	@Override
	public long getPublishVerId() {
		return _publishVerId;
	}

	@Override
	public void setPublishVerId(long publishVerId) {
		_columnBitmask |= PUBLISHVERID_COLUMN_BITMASK;

		if (!_setOriginalPublishVerId) {
			_setOriginalPublishVerId = true;

			_originalPublishVerId = _publishVerId;
		}

		_publishVerId = publishVerId;
	}

	public long getOriginalPublishVerId() {
		return _originalPublishVerId;
	}

	@Override
	public String getCountryCode() {
		if (_countryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _countryCode;
		}
	}

	@Override
	public void setCountryCode(String countryCode) {
		_columnBitmask |= COUNTRYCODE_COLUMN_BITMASK;

		if (_originalCountryCode == null) {
			_originalCountryCode = _countryCode;
		}

		_countryCode = countryCode;
	}

	public String getOriginalCountryCode() {
		return GetterUtil.getString(_originalCountryCode);
	}

	@Override
	public String getExpiredRefTxt() {
		if (_expiredRefTxt == null) {
			return StringPool.BLANK;
		}
		else {
			return _expiredRefTxt;
		}
	}

	@Override
	public void setExpiredRefTxt(String expiredRefTxt) {
		_expiredRefTxt = expiredRefTxt;
	}

	@Override
	public String getPublishStatCode() {
		if (_publishStatCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishStatCode;
		}
	}

	@Override
	public void setPublishStatCode(String publishStatCode) {
		_publishStatCode = publishStatCode;
	}

	@Override
	public Date getStdComplyDeadlineDate() {
		return _stdComplyDeadlineDate;
	}

	@Override
	public void setStdComplyDeadlineDate(Date stdComplyDeadlineDate) {
		_stdComplyDeadlineDate = stdComplyDeadlineDate;
	}

	@Override
	public long getOrderNumber() {
		return _orderNumber;
	}

	@Override
	public void setOrderNumber(long orderNumber) {
		_orderNumber = orderNumber;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public PublishCountryStandard toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PublishCountryStandard)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PublishCountryStandardImpl publishCountryStandardImpl = new PublishCountryStandardImpl();

		publishCountryStandardImpl.setPublishCountryStdId(getPublishCountryStdId());
		publishCountryStandardImpl.setPublishVerId(getPublishVerId());
		publishCountryStandardImpl.setCountryCode(getCountryCode());
		publishCountryStandardImpl.setExpiredRefTxt(getExpiredRefTxt());
		publishCountryStandardImpl.setPublishStatCode(getPublishStatCode());
		publishCountryStandardImpl.setStdComplyDeadlineDate(getStdComplyDeadlineDate());
		publishCountryStandardImpl.setOrderNumber(getOrderNumber());
		publishCountryStandardImpl.setCreatorId(getCreatorId());
		publishCountryStandardImpl.setCreatedDate(getCreatedDate());
		publishCountryStandardImpl.setUpdatedBy(getUpdatedBy());
		publishCountryStandardImpl.setUpdatedDate(getUpdatedDate());

		publishCountryStandardImpl.resetOriginalValues();

		return publishCountryStandardImpl;
	}

	@Override
	public int compareTo(PublishCountryStandard publishCountryStandard) {
		String primaryKey = publishCountryStandard.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PublishCountryStandard)) {
			return false;
		}

		PublishCountryStandard publishCountryStandard = (PublishCountryStandard)obj;

		String primaryKey = publishCountryStandard.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		PublishCountryStandardModelImpl publishCountryStandardModelImpl = this;

		publishCountryStandardModelImpl._originalPublishCountryStdId = publishCountryStandardModelImpl._publishCountryStdId;

		publishCountryStandardModelImpl._originalPublishVerId = publishCountryStandardModelImpl._publishVerId;

		publishCountryStandardModelImpl._setOriginalPublishVerId = false;

		publishCountryStandardModelImpl._originalCountryCode = publishCountryStandardModelImpl._countryCode;

		publishCountryStandardModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PublishCountryStandard> toCacheModel() {
		PublishCountryStandardCacheModel publishCountryStandardCacheModel = new PublishCountryStandardCacheModel();

		publishCountryStandardCacheModel.publishCountryStdId = getPublishCountryStdId();

		String publishCountryStdId = publishCountryStandardCacheModel.publishCountryStdId;

		if ((publishCountryStdId != null) &&
				(publishCountryStdId.length() == 0)) {
			publishCountryStandardCacheModel.publishCountryStdId = null;
		}

		publishCountryStandardCacheModel.publishVerId = getPublishVerId();

		publishCountryStandardCacheModel.countryCode = getCountryCode();

		String countryCode = publishCountryStandardCacheModel.countryCode;

		if ((countryCode != null) && (countryCode.length() == 0)) {
			publishCountryStandardCacheModel.countryCode = null;
		}

		publishCountryStandardCacheModel.expiredRefTxt = getExpiredRefTxt();

		String expiredRefTxt = publishCountryStandardCacheModel.expiredRefTxt;

		if ((expiredRefTxt != null) && (expiredRefTxt.length() == 0)) {
			publishCountryStandardCacheModel.expiredRefTxt = null;
		}

		publishCountryStandardCacheModel.publishStatCode = getPublishStatCode();

		String publishStatCode = publishCountryStandardCacheModel.publishStatCode;

		if ((publishStatCode != null) && (publishStatCode.length() == 0)) {
			publishCountryStandardCacheModel.publishStatCode = null;
		}

		Date stdComplyDeadlineDate = getStdComplyDeadlineDate();

		if (stdComplyDeadlineDate != null) {
			publishCountryStandardCacheModel.stdComplyDeadlineDate = stdComplyDeadlineDate.getTime();
		}
		else {
			publishCountryStandardCacheModel.stdComplyDeadlineDate = Long.MIN_VALUE;
		}

		publishCountryStandardCacheModel.orderNumber = getOrderNumber();

		publishCountryStandardCacheModel.creatorId = getCreatorId();

		String creatorId = publishCountryStandardCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			publishCountryStandardCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			publishCountryStandardCacheModel.createdDate = createdDate.getTime();
		}
		else {
			publishCountryStandardCacheModel.createdDate = Long.MIN_VALUE;
		}

		publishCountryStandardCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = publishCountryStandardCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			publishCountryStandardCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			publishCountryStandardCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			publishCountryStandardCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return publishCountryStandardCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{publishCountryStdId=");
		sb.append(getPublishCountryStdId());
		sb.append(", publishVerId=");
		sb.append(getPublishVerId());
		sb.append(", countryCode=");
		sb.append(getCountryCode());
		sb.append(", expiredRefTxt=");
		sb.append(getExpiredRefTxt());
		sb.append(", publishStatCode=");
		sb.append(getPublishStatCode());
		sb.append(", stdComplyDeadlineDate=");
		sb.append(getStdComplyDeadlineDate());
		sb.append(", orderNumber=");
		sb.append(getOrderNumber());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.PublishCountryStandard");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>publishCountryStdId</column-name><column-value><![CDATA[");
		sb.append(getPublishCountryStdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishVerId</column-name><column-value><![CDATA[");
		sb.append(getPublishVerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryCode</column-name><column-value><![CDATA[");
		sb.append(getCountryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiredRefTxt</column-name><column-value><![CDATA[");
		sb.append(getExpiredRefTxt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishStatCode</column-name><column-value><![CDATA[");
		sb.append(getPublishStatCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stdComplyDeadlineDate</column-name><column-value><![CDATA[");
		sb.append(getStdComplyDeadlineDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orderNumber</column-name><column-value><![CDATA[");
		sb.append(getOrderNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PublishCountryStandard.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PublishCountryStandard.class
		};
	private String _publishCountryStdId;
	private String _originalPublishCountryStdId;
	private long _publishVerId;
	private long _originalPublishVerId;
	private boolean _setOriginalPublishVerId;
	private String _countryCode;
	private String _originalCountryCode;
	private String _expiredRefTxt;
	private String _publishStatCode;
	private Date _stdComplyDeadlineDate;
	private long _orderNumber;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private long _columnBitmask;
	private PublishCountryStandard _escapedModel;
}