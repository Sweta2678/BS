/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.HistManualChain;
import com.ihg.brandstandards.db.model.HistManualChainModel;
import com.ihg.brandstandards.db.service.persistence.HistManualChainPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HistManualChain service. Represents a row in the &quot;MNL_CHN&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.HistManualChainModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HistManualChainImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see HistManualChainImpl
 * @see com.ihg.brandstandards.db.model.HistManualChain
 * @see com.ihg.brandstandards.db.model.HistManualChainModel
 * @generated
 */
public class HistManualChainModelImpl extends BaseModelImpl<HistManualChain>
	implements HistManualChainModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a hist manual chain model instance should use the {@link com.ihg.brandstandards.db.model.HistManualChain} interface instead.
	 */
	public static final String TABLE_NAME = "MNL_CHN";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CHN_CD", Types.VARCHAR },
			{ "HST_MNL_ID", Types.BIGINT },
			{ "CREATE_BY", Types.VARCHAR },
			{ "CREATE_DATE", Types.TIMESTAMP },
			{ "LAST_UPD_BY", Types.VARCHAR },
			{ "LAST_UPD_DATE", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table MNL_CHN (CHN_CD VARCHAR(75) not null,HST_MNL_ID LONG not null,CREATE_BY VARCHAR(75) null,CREATE_DATE DATE null,LAST_UPD_BY VARCHAR(75) null,LAST_UPD_DATE DATE null,primary key (CHN_CD, HST_MNL_ID))";
	public static final String TABLE_SQL_DROP = "drop table MNL_CHN";
	public static final String ORDER_BY_JPQL = " ORDER BY histManualChain.id.chainCode ASC, histManualChain.id.histManualId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MNL_CHN.CHN_CD ASC, MNL_CHN.HST_MNL_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.HistManualChain"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.HistManualChain"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.HistManualChain"),
			true);
	public static long HISTMANUALID_COLUMN_BITMASK = 1L;
	public static long CHAINCODE_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.HistManualChain"));

	public HistManualChainModelImpl() {
	}

	@Override
	public HistManualChainPK getPrimaryKey() {
		return new HistManualChainPK(_chainCode, _histManualId);
	}

	@Override
	public void setPrimaryKey(HistManualChainPK primaryKey) {
		setChainCode(primaryKey.chainCode);
		setHistManualId(primaryKey.histManualId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new HistManualChainPK(_chainCode, _histManualId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((HistManualChainPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return HistManualChain.class;
	}

	@Override
	public String getModelClassName() {
		return HistManualChain.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("chainCode", getChainCode());
		attributes.put("histManualId", getHistManualId());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String chainCode = (String)attributes.get("chainCode");

		if (chainCode != null) {
			setChainCode(chainCode);
		}

		Long histManualId = (Long)attributes.get("histManualId");

		if (histManualId != null) {
			setHistManualId(histManualId);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public String getChainCode() {
		if (_chainCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _chainCode;
		}
	}

	@Override
	public void setChainCode(String chainCode) {
		_chainCode = chainCode;
	}

	@Override
	public long getHistManualId() {
		return _histManualId;
	}

	@Override
	public void setHistManualId(long histManualId) {
		_columnBitmask |= HISTMANUALID_COLUMN_BITMASK;

		if (!_setOriginalHistManualId) {
			_setOriginalHistManualId = true;

			_originalHistManualId = _histManualId;
		}

		_histManualId = histManualId;
	}

	public long getOriginalHistManualId() {
		return _originalHistManualId;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public HistManualChain toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (HistManualChain)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HistManualChainImpl histManualChainImpl = new HistManualChainImpl();

		histManualChainImpl.setChainCode(getChainCode());
		histManualChainImpl.setHistManualId(getHistManualId());
		histManualChainImpl.setCreatorId(getCreatorId());
		histManualChainImpl.setCreatedDate(getCreatedDate());
		histManualChainImpl.setUpdatedBy(getUpdatedBy());
		histManualChainImpl.setUpdatedDate(getUpdatedDate());

		histManualChainImpl.resetOriginalValues();

		return histManualChainImpl;
	}

	@Override
	public int compareTo(HistManualChain histManualChain) {
		HistManualChainPK primaryKey = histManualChain.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof HistManualChain)) {
			return false;
		}

		HistManualChain histManualChain = (HistManualChain)obj;

		HistManualChainPK primaryKey = histManualChain.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		HistManualChainModelImpl histManualChainModelImpl = this;

		histManualChainModelImpl._originalHistManualId = histManualChainModelImpl._histManualId;

		histManualChainModelImpl._setOriginalHistManualId = false;

		histManualChainModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<HistManualChain> toCacheModel() {
		HistManualChainCacheModel histManualChainCacheModel = new HistManualChainCacheModel();

		histManualChainCacheModel.chainCode = getChainCode();

		String chainCode = histManualChainCacheModel.chainCode;

		if ((chainCode != null) && (chainCode.length() == 0)) {
			histManualChainCacheModel.chainCode = null;
		}

		histManualChainCacheModel.histManualId = getHistManualId();

		histManualChainCacheModel.creatorId = getCreatorId();

		String creatorId = histManualChainCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			histManualChainCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			histManualChainCacheModel.createdDate = createdDate.getTime();
		}
		else {
			histManualChainCacheModel.createdDate = Long.MIN_VALUE;
		}

		histManualChainCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = histManualChainCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			histManualChainCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			histManualChainCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			histManualChainCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return histManualChainCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{chainCode=");
		sb.append(getChainCode());
		sb.append(", histManualId=");
		sb.append(getHistManualId());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.HistManualChain");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>chainCode</column-name><column-value><![CDATA[");
		sb.append(getChainCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>histManualId</column-name><column-value><![CDATA[");
		sb.append(getHistManualId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = HistManualChain.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			HistManualChain.class
		};
	private String _chainCode;
	private long _histManualId;
	private long _originalHistManualId;
	private boolean _setOriginalHistManualId;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private long _columnBitmask;
	private HistManualChain _escapedModel;
}