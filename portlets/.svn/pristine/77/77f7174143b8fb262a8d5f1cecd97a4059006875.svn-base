/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.StandardsComplianceExt;
import com.ihg.brandstandards.db.model.StandardsComplianceExtModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StandardsComplianceExt service. Represents a row in the &quot;STD_CMPLY&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.StandardsComplianceExtModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StandardsComplianceExtImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see StandardsComplianceExtImpl
 * @see com.ihg.brandstandards.db.model.StandardsComplianceExt
 * @see com.ihg.brandstandards.db.model.StandardsComplianceExtModel
 * @generated
 */
public class StandardsComplianceExtModelImpl extends BaseModelImpl<StandardsComplianceExt>
	implements StandardsComplianceExtModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a standards compliance ext model instance should use the {@link com.ihg.brandstandards.db.model.StandardsComplianceExt} interface instead.
	 */
	public static final String TABLE_NAME = "STD_CMPLY";
	public static final Object[][] TABLE_COLUMNS = {
			{ "STD_CMPLY_ID", Types.BIGINT },
			{ "STD_ID", Types.BIGINT },
			{ "CTRY_NM_CD", Types.VARCHAR },
			{ "RGN_CD", Types.VARCHAR },
			{ "CHAIN_CD", Types.VARCHAR },
			{ "CMPLY_EXPR_DT", Types.TIMESTAMP },
			{ "CMPLY_EXPR_RULE_CD", Types.VARCHAR },
			{ "CMPLY_RULE_MO_QTY", Types.BIGINT },
			{ "RULE_DT_CD", Types.VARCHAR },
			{ "EXPR_DT", Types.VARCHAR },
			{ "CMPLY_DT_STR", Types.VARCHAR },
			{ "EXPR_DT_STR", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table STD_CMPLY (STD_CMPLY_ID LONG not null primary key,STD_ID LONG,CTRY_NM_CD VARCHAR(75) null,RGN_CD VARCHAR(75) null,CHAIN_CD VARCHAR(75) null,CMPLY_EXPR_DT DATE null,CMPLY_EXPR_RULE_CD VARCHAR(75) null,CMPLY_RULE_MO_QTY LONG,RULE_DT_CD VARCHAR(75) null,EXPR_DT VARCHAR(75) null,CMPLY_DT_STR VARCHAR(75) null,EXPR_DT_STR VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table STD_CMPLY";
	public static final String ORDER_BY_JPQL = " ORDER BY standardsComplianceExt.stdComplianceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY STD_CMPLY.STD_CMPLY_ID ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.StandardsComplianceExt"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.StandardsComplianceExt"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.StandardsComplianceExt"));

	public StandardsComplianceExtModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _stdComplianceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStdComplianceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _stdComplianceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StandardsComplianceExt.class;
	}

	@Override
	public String getModelClassName() {
		return StandardsComplianceExt.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("stdComplianceId", getStdComplianceId());
		attributes.put("stdId", getStdId());
		attributes.put("countryCode", getCountryCode());
		attributes.put("regionCode", getRegionCode());
		attributes.put("chainCode", getChainCode());
		attributes.put("complianceExpiryDate", getComplianceExpiryDate());
		attributes.put("complianceExpiryRule", getComplianceExpiryRule());
		attributes.put("complianceRuleMonths", getComplianceRuleMonths());
		attributes.put("RuleDate", getRuleDate());
		attributes.put("expiryDate", getExpiryDate());
		attributes.put("complianceDateString", getComplianceDateString());
		attributes.put("expiryDateString", getExpiryDateString());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long stdComplianceId = (Long)attributes.get("stdComplianceId");

		if (stdComplianceId != null) {
			setStdComplianceId(stdComplianceId);
		}

		Long stdId = (Long)attributes.get("stdId");

		if (stdId != null) {
			setStdId(stdId);
		}

		String countryCode = (String)attributes.get("countryCode");

		if (countryCode != null) {
			setCountryCode(countryCode);
		}

		String regionCode = (String)attributes.get("regionCode");

		if (regionCode != null) {
			setRegionCode(regionCode);
		}

		String chainCode = (String)attributes.get("chainCode");

		if (chainCode != null) {
			setChainCode(chainCode);
		}

		Date complianceExpiryDate = (Date)attributes.get("complianceExpiryDate");

		if (complianceExpiryDate != null) {
			setComplianceExpiryDate(complianceExpiryDate);
		}

		String complianceExpiryRule = (String)attributes.get(
				"complianceExpiryRule");

		if (complianceExpiryRule != null) {
			setComplianceExpiryRule(complianceExpiryRule);
		}

		Long complianceRuleMonths = (Long)attributes.get("complianceRuleMonths");

		if (complianceRuleMonths != null) {
			setComplianceRuleMonths(complianceRuleMonths);
		}

		String RuleDate = (String)attributes.get("RuleDate");

		if (RuleDate != null) {
			setRuleDate(RuleDate);
		}

		String expiryDate = (String)attributes.get("expiryDate");

		if (expiryDate != null) {
			setExpiryDate(expiryDate);
		}

		String complianceDateString = (String)attributes.get(
				"complianceDateString");

		if (complianceDateString != null) {
			setComplianceDateString(complianceDateString);
		}

		String expiryDateString = (String)attributes.get("expiryDateString");

		if (expiryDateString != null) {
			setExpiryDateString(expiryDateString);
		}
	}

	@Override
	public long getStdComplianceId() {
		return _stdComplianceId;
	}

	@Override
	public void setStdComplianceId(long stdComplianceId) {
		_stdComplianceId = stdComplianceId;
	}

	@Override
	public long getStdId() {
		return _stdId;
	}

	@Override
	public void setStdId(long stdId) {
		_stdId = stdId;
	}

	@Override
	public String getCountryCode() {
		if (_countryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _countryCode;
		}
	}

	@Override
	public void setCountryCode(String countryCode) {
		_countryCode = countryCode;
	}

	@Override
	public String getRegionCode() {
		if (_regionCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _regionCode;
		}
	}

	@Override
	public void setRegionCode(String regionCode) {
		_regionCode = regionCode;
	}

	@Override
	public String getChainCode() {
		if (_chainCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _chainCode;
		}
	}

	@Override
	public void setChainCode(String chainCode) {
		_chainCode = chainCode;
	}

	@Override
	public Date getComplianceExpiryDate() {
		return _complianceExpiryDate;
	}

	@Override
	public void setComplianceExpiryDate(Date complianceExpiryDate) {
		_complianceExpiryDate = complianceExpiryDate;
	}

	@Override
	public String getComplianceExpiryRule() {
		if (_complianceExpiryRule == null) {
			return StringPool.BLANK;
		}
		else {
			return _complianceExpiryRule;
		}
	}

	@Override
	public void setComplianceExpiryRule(String complianceExpiryRule) {
		_complianceExpiryRule = complianceExpiryRule;
	}

	@Override
	public long getComplianceRuleMonths() {
		return _complianceRuleMonths;
	}

	@Override
	public void setComplianceRuleMonths(long complianceRuleMonths) {
		_complianceRuleMonths = complianceRuleMonths;
	}

	@Override
	public String getRuleDate() {
		if (_RuleDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _RuleDate;
		}
	}

	@Override
	public void setRuleDate(String RuleDate) {
		_RuleDate = RuleDate;
	}

	@Override
	public String getExpiryDate() {
		if (_expiryDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _expiryDate;
		}
	}

	@Override
	public void setExpiryDate(String expiryDate) {
		_expiryDate = expiryDate;
	}

	@Override
	public String getComplianceDateString() {
		if (_complianceDateString == null) {
			return StringPool.BLANK;
		}
		else {
			return _complianceDateString;
		}
	}

	@Override
	public void setComplianceDateString(String complianceDateString) {
		_complianceDateString = complianceDateString;
	}

	@Override
	public String getExpiryDateString() {
		if (_expiryDateString == null) {
			return StringPool.BLANK;
		}
		else {
			return _expiryDateString;
		}
	}

	@Override
	public void setExpiryDateString(String expiryDateString) {
		_expiryDateString = expiryDateString;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			StandardsComplianceExt.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StandardsComplianceExt toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StandardsComplianceExt)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StandardsComplianceExtImpl standardsComplianceExtImpl = new StandardsComplianceExtImpl();

		standardsComplianceExtImpl.setStdComplianceId(getStdComplianceId());
		standardsComplianceExtImpl.setStdId(getStdId());
		standardsComplianceExtImpl.setCountryCode(getCountryCode());
		standardsComplianceExtImpl.setRegionCode(getRegionCode());
		standardsComplianceExtImpl.setChainCode(getChainCode());
		standardsComplianceExtImpl.setComplianceExpiryDate(getComplianceExpiryDate());
		standardsComplianceExtImpl.setComplianceExpiryRule(getComplianceExpiryRule());
		standardsComplianceExtImpl.setComplianceRuleMonths(getComplianceRuleMonths());
		standardsComplianceExtImpl.setRuleDate(getRuleDate());
		standardsComplianceExtImpl.setExpiryDate(getExpiryDate());
		standardsComplianceExtImpl.setComplianceDateString(getComplianceDateString());
		standardsComplianceExtImpl.setExpiryDateString(getExpiryDateString());

		standardsComplianceExtImpl.resetOriginalValues();

		return standardsComplianceExtImpl;
	}

	@Override
	public int compareTo(StandardsComplianceExt standardsComplianceExt) {
		long primaryKey = standardsComplianceExt.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StandardsComplianceExt)) {
			return false;
		}

		StandardsComplianceExt standardsComplianceExt = (StandardsComplianceExt)obj;

		long primaryKey = standardsComplianceExt.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<StandardsComplianceExt> toCacheModel() {
		StandardsComplianceExtCacheModel standardsComplianceExtCacheModel = new StandardsComplianceExtCacheModel();

		standardsComplianceExtCacheModel.stdComplianceId = getStdComplianceId();

		standardsComplianceExtCacheModel.stdId = getStdId();

		standardsComplianceExtCacheModel.countryCode = getCountryCode();

		String countryCode = standardsComplianceExtCacheModel.countryCode;

		if ((countryCode != null) && (countryCode.length() == 0)) {
			standardsComplianceExtCacheModel.countryCode = null;
		}

		standardsComplianceExtCacheModel.regionCode = getRegionCode();

		String regionCode = standardsComplianceExtCacheModel.regionCode;

		if ((regionCode != null) && (regionCode.length() == 0)) {
			standardsComplianceExtCacheModel.regionCode = null;
		}

		standardsComplianceExtCacheModel.chainCode = getChainCode();

		String chainCode = standardsComplianceExtCacheModel.chainCode;

		if ((chainCode != null) && (chainCode.length() == 0)) {
			standardsComplianceExtCacheModel.chainCode = null;
		}

		Date complianceExpiryDate = getComplianceExpiryDate();

		if (complianceExpiryDate != null) {
			standardsComplianceExtCacheModel.complianceExpiryDate = complianceExpiryDate.getTime();
		}
		else {
			standardsComplianceExtCacheModel.complianceExpiryDate = Long.MIN_VALUE;
		}

		standardsComplianceExtCacheModel.complianceExpiryRule = getComplianceExpiryRule();

		String complianceExpiryRule = standardsComplianceExtCacheModel.complianceExpiryRule;

		if ((complianceExpiryRule != null) &&
				(complianceExpiryRule.length() == 0)) {
			standardsComplianceExtCacheModel.complianceExpiryRule = null;
		}

		standardsComplianceExtCacheModel.complianceRuleMonths = getComplianceRuleMonths();

		standardsComplianceExtCacheModel.RuleDate = getRuleDate();

		String RuleDate = standardsComplianceExtCacheModel.RuleDate;

		if ((RuleDate != null) && (RuleDate.length() == 0)) {
			standardsComplianceExtCacheModel.RuleDate = null;
		}

		standardsComplianceExtCacheModel.expiryDate = getExpiryDate();

		String expiryDate = standardsComplianceExtCacheModel.expiryDate;

		if ((expiryDate != null) && (expiryDate.length() == 0)) {
			standardsComplianceExtCacheModel.expiryDate = null;
		}

		standardsComplianceExtCacheModel.complianceDateString = getComplianceDateString();

		String complianceDateString = standardsComplianceExtCacheModel.complianceDateString;

		if ((complianceDateString != null) &&
				(complianceDateString.length() == 0)) {
			standardsComplianceExtCacheModel.complianceDateString = null;
		}

		standardsComplianceExtCacheModel.expiryDateString = getExpiryDateString();

		String expiryDateString = standardsComplianceExtCacheModel.expiryDateString;

		if ((expiryDateString != null) && (expiryDateString.length() == 0)) {
			standardsComplianceExtCacheModel.expiryDateString = null;
		}

		return standardsComplianceExtCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{stdComplianceId=");
		sb.append(getStdComplianceId());
		sb.append(", stdId=");
		sb.append(getStdId());
		sb.append(", countryCode=");
		sb.append(getCountryCode());
		sb.append(", regionCode=");
		sb.append(getRegionCode());
		sb.append(", chainCode=");
		sb.append(getChainCode());
		sb.append(", complianceExpiryDate=");
		sb.append(getComplianceExpiryDate());
		sb.append(", complianceExpiryRule=");
		sb.append(getComplianceExpiryRule());
		sb.append(", complianceRuleMonths=");
		sb.append(getComplianceRuleMonths());
		sb.append(", RuleDate=");
		sb.append(getRuleDate());
		sb.append(", expiryDate=");
		sb.append(getExpiryDate());
		sb.append(", complianceDateString=");
		sb.append(getComplianceDateString());
		sb.append(", expiryDateString=");
		sb.append(getExpiryDateString());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.StandardsComplianceExt");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>stdComplianceId</column-name><column-value><![CDATA[");
		sb.append(getStdComplianceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stdId</column-name><column-value><![CDATA[");
		sb.append(getStdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryCode</column-name><column-value><![CDATA[");
		sb.append(getCountryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionCode</column-name><column-value><![CDATA[");
		sb.append(getRegionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chainCode</column-name><column-value><![CDATA[");
		sb.append(getChainCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complianceExpiryDate</column-name><column-value><![CDATA[");
		sb.append(getComplianceExpiryDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complianceExpiryRule</column-name><column-value><![CDATA[");
		sb.append(getComplianceExpiryRule());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complianceRuleMonths</column-name><column-value><![CDATA[");
		sb.append(getComplianceRuleMonths());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RuleDate</column-name><column-value><![CDATA[");
		sb.append(getRuleDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiryDate</column-name><column-value><![CDATA[");
		sb.append(getExpiryDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complianceDateString</column-name><column-value><![CDATA[");
		sb.append(getComplianceDateString());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiryDateString</column-name><column-value><![CDATA[");
		sb.append(getExpiryDateString());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StandardsComplianceExt.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StandardsComplianceExt.class
		};
	private long _stdComplianceId;
	private long _stdId;
	private String _countryCode;
	private String _regionCode;
	private String _chainCode;
	private Date _complianceExpiryDate;
	private String _complianceExpiryRule;
	private long _complianceRuleMonths;
	private String _RuleDate;
	private String _expiryDate;
	private String _complianceDateString;
	private String _expiryDateString;
	private StandardsComplianceExt _escapedModel;
}