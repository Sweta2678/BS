/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.service;

import com.liferay.portal.service.ServiceWrapper;

/**
 * Provides a wrapper for {@link PublicationLocalService}.
 *
 * @author Mummanedi
 * @see PublicationLocalService
 * @generated
 */
public class PublicationLocalServiceWrapper implements PublicationLocalService,
	ServiceWrapper<PublicationLocalService> {
	public PublicationLocalServiceWrapper(
		PublicationLocalService publicationLocalService) {
		_publicationLocalService = publicationLocalService;
	}

	/**
	* Adds the publication to the database. Also notifies the appropriate model listeners.
	*
	* @param publication the publication
	* @return the publication that was added
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication addPublication(
		com.ihg.brandstandards.db.model.Publication publication)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.addPublication(publication);
	}

	/**
	* Creates a new publication with the primary key. Does not add the publication to the database.
	*
	* @param publishId the primary key for the new publication
	* @return the new publication
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication createPublication(
		long publishId) {
		return _publicationLocalService.createPublication(publishId);
	}

	/**
	* Deletes the publication with the primary key from the database. Also notifies the appropriate model listeners.
	*
	* @param publishId the primary key of the publication
	* @return the publication that was removed
	* @throws PortalException if a publication with the primary key could not be found
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication deletePublication(
		long publishId)
		throws com.liferay.portal.kernel.exception.PortalException,
			com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.deletePublication(publishId);
	}

	/**
	* Deletes the publication from the database. Also notifies the appropriate model listeners.
	*
	* @param publication the publication
	* @return the publication that was removed
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication deletePublication(
		com.ihg.brandstandards.db.model.Publication publication)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.deletePublication(publication);
	}

	@Override
	public com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery() {
		return _publicationLocalService.dynamicQuery();
	}

	/**
	* Performs a dynamic query on the database and returns the matching rows.
	*
	* @param dynamicQuery the dynamic query
	* @return the matching rows
	* @throws SystemException if a system exception occurred
	*/
	@Override
	@SuppressWarnings("rawtypes")
	public java.util.List dynamicQuery(
		com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.dynamicQuery(dynamicQuery);
	}

	/**
	* Performs a dynamic query on the database and returns a range of the matching rows.
	*
	* <p>
	* Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.ihg.brandstandards.db.model.impl.PublicationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	* </p>
	*
	* @param dynamicQuery the dynamic query
	* @param start the lower bound of the range of model instances
	* @param end the upper bound of the range of model instances (not inclusive)
	* @return the range of matching rows
	* @throws SystemException if a system exception occurred
	*/
	@Override
	@SuppressWarnings("rawtypes")
	public java.util.List dynamicQuery(
		com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery, int start,
		int end) throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.dynamicQuery(dynamicQuery, start, end);
	}

	/**
	* Performs a dynamic query on the database and returns an ordered range of the matching rows.
	*
	* <p>
	* Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.ihg.brandstandards.db.model.impl.PublicationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	* </p>
	*
	* @param dynamicQuery the dynamic query
	* @param start the lower bound of the range of model instances
	* @param end the upper bound of the range of model instances (not inclusive)
	* @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	* @return the ordered range of matching rows
	* @throws SystemException if a system exception occurred
	*/
	@Override
	@SuppressWarnings("rawtypes")
	public java.util.List dynamicQuery(
		com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery, int start,
		int end,
		com.liferay.portal.kernel.util.OrderByComparator orderByComparator)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.dynamicQuery(dynamicQuery, start, end,
			orderByComparator);
	}

	/**
	* Returns the number of rows that match the dynamic query.
	*
	* @param dynamicQuery the dynamic query
	* @return the number of rows that match the dynamic query
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public long dynamicQueryCount(
		com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.dynamicQueryCount(dynamicQuery);
	}

	/**
	* Returns the number of rows that match the dynamic query.
	*
	* @param dynamicQuery the dynamic query
	* @param projection the projection to apply to the query
	* @return the number of rows that match the dynamic query
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public long dynamicQueryCount(
		com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery,
		com.liferay.portal.kernel.dao.orm.Projection projection)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.dynamicQueryCount(dynamicQuery,
			projection);
	}

	@Override
	public com.ihg.brandstandards.db.model.Publication fetchPublication(
		long publishId)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.fetchPublication(publishId);
	}

	/**
	* Returns the publication with the primary key.
	*
	* @param publishId the primary key of the publication
	* @return the publication
	* @throws PortalException if a publication with the primary key could not be found
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication getPublication(
		long publishId)
		throws com.liferay.portal.kernel.exception.PortalException,
			com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublication(publishId);
	}

	@Override
	public com.liferay.portal.model.PersistedModel getPersistedModel(
		java.io.Serializable primaryKeyObj)
		throws com.liferay.portal.kernel.exception.PortalException,
			com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPersistedModel(primaryKeyObj);
	}

	/**
	* Returns a range of all the publications.
	*
	* <p>
	* Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.ihg.brandstandards.db.model.impl.PublicationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	* </p>
	*
	* @param start the lower bound of the range of publications
	* @param end the upper bound of the range of publications (not inclusive)
	* @return the range of publications
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public java.util.List<com.ihg.brandstandards.db.model.Publication> getPublications(
		int start, int end)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublications(start, end);
	}

	/**
	* Returns the number of publications.
	*
	* @return the number of publications
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public int getPublicationsCount()
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublicationsCount();
	}

	/**
	* Updates the publication in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	*
	* @param publication the publication
	* @return the publication that was updated
	* @throws SystemException if a system exception occurred
	*/
	@Override
	public com.ihg.brandstandards.db.model.Publication updatePublication(
		com.ihg.brandstandards.db.model.Publication publication)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.updatePublication(publication);
	}

	/**
	* Returns the Spring bean ID for this bean.
	*
	* @return the Spring bean ID for this bean
	*/
	@Override
	public java.lang.String getBeanIdentifier() {
		return _publicationLocalService.getBeanIdentifier();
	}

	/**
	* Sets the Spring bean ID for this bean.
	*
	* @param beanIdentifier the Spring bean ID for this bean
	*/
	@Override
	public void setBeanIdentifier(java.lang.String beanIdentifier) {
		_publicationLocalService.setBeanIdentifier(beanIdentifier);
	}

	@Override
	public java.lang.Object invokeMethod(java.lang.String name,
		java.lang.String[] parameterTypes, java.lang.Object[] arguments)
		throws java.lang.Throwable {
		return _publicationLocalService.invokeMethod(name, parameterTypes,
			arguments);
	}

	@Override
	public void clearCache() {
		_publicationLocalService.clearCache();
	}

	@Override
	public com.ihg.brandstandards.db.model.Publication getPublishByStatEnvChainCode(
		java.lang.String status, java.lang.String environment,
		java.lang.String chainCode)
		throws com.ihg.brandstandards.db.NoSuchPublicationException,
			com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublishByStatEnvChainCode(status,
			environment, chainCode);
	}

	@Override
	public java.util.List<com.ihg.brandstandards.db.model.Publication> getPublishByEnvChainCode(
		java.lang.String environment, java.lang.String chainCode)
		throws com.ihg.brandstandards.db.NoSuchPublicationException,
			com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublishByEnvChainCode(environment,
			chainCode);
	}

	@Override
	public boolean isPublishedBrand(java.lang.String chainCode)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.isPublishedBrand(chainCode);
	}

	@Override
	public com.ihg.brandstandards.db.model.Publication getPublishObjectByBrand(
		java.lang.String chainCode, java.lang.String environment,
		java.lang.String status) {
		return _publicationLocalService.getPublishObjectByBrand(chainCode,
			environment, status);
	}

	/**
	* This method will return list of published entries based on brand and environment
	*
	* @author Lakshminarayana Mummanedi
	* @param chainCode
	* @param publishEnv
	* @return List<Publish>
	*/
	@Override
	public java.util.List<com.ihg.brandstandards.db.model.Publication> getWhatChangedOnNavigation(
		java.lang.String chainCode, java.lang.String publishEnv) {
		return _publicationLocalService.getWhatChangedOnNavigation(chainCode,
			publishEnv);
	}

	@Override
	public java.util.List<java.lang.String> getPublishLanguagesPerBrand(
		java.lang.String chainCode, java.lang.String environment)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublishLanguagesPerBrand(chainCode,
			environment);
	}

	@Override
	public long getPublishIdByBrand(java.lang.String chainCode,
		java.lang.String environment)
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.getPublishIdByBrand(chainCode,
			environment);
	}

	/**
	* This method will return the translated date based language & date params passed to it.
	* This just a utility method. We have written this method here because this method is called form Navigation.vm.
	*
	* @author Lakshminarayana Mummanedi
	* @param publishedDate
	* @param localeCD
	* @return
	*/
	@Override
	public java.lang.String getFormatedDate(java.util.Date publishedDate,
		java.lang.String localeCD,
		java.util.Map<java.lang.String, java.lang.String> obsmBsLanguageUtil) {
		return _publicationLocalService.getFormatedDate(publishedDate,
			localeCD, obsmBsLanguageUtil);
	}

	@Override
	public java.util.List<com.ihg.brandstandards.db.model.Publication> getAllPublicationsByBrand(
		java.lang.String brandCode) {
		return _publicationLocalService.getAllPublicationsByBrand(brandCode);
	}

	@Override
	public com.ihg.brandstandards.db.model.Publication createPublication()
		throws com.liferay.portal.kernel.exception.SystemException {
		return _publicationLocalService.createPublication();
	}

	@Override
	public java.util.List<java.lang.String> fetchUniquePublishedBrandCodes() {
		return _publicationLocalService.fetchUniquePublishedBrandCodes();
	}

	@Override
	public com.ihg.brandstandards.db.model.Publication getLatestPublication(
		java.lang.String brandCode, java.lang.String environment,
		java.lang.String status) {
		return _publicationLocalService.getLatestPublication(brandCode,
			environment, status);
	}

	@Override
	public java.util.List<com.ihg.brandstandards.db.model.Publication> getPublicationByQuery(
		java.lang.String query) {
		return _publicationLocalService.getPublicationByQuery(query);
	}

	@Override
	public java.util.List<java.lang.String> getPublicationDateByEnv(
		java.lang.String env) {
		return _publicationLocalService.getPublicationDateByEnv(env);
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #getWrappedService}
	 */
	public PublicationLocalService getWrappedPublicationLocalService() {
		return _publicationLocalService;
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #setWrappedService}
	 */
	public void setWrappedPublicationLocalService(
		PublicationLocalService publicationLocalService) {
		_publicationLocalService = publicationLocalService;
	}

	@Override
	public PublicationLocalService getWrappedService() {
		return _publicationLocalService;
	}

	@Override
	public void setWrappedService(
		PublicationLocalService publicationLocalService) {
		_publicationLocalService = publicationLocalService;
	}

	private PublicationLocalService _publicationLocalService;
}