/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Department service. Represents a row in the &quot;GEM_DEPT&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ihg.brandstandards.db.model.impl.DepartmentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ihg.brandstandards.db.model.impl.DepartmentImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see Department
 * @see com.ihg.brandstandards.db.model.impl.DepartmentImpl
 * @see com.ihg.brandstandards.db.model.impl.DepartmentModelImpl
 * @generated
 */
public interface DepartmentModel extends BaseModel<Department> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a department model instance should use the {@link Department} interface instead.
	 */

	/**
	 * Returns the primary key of this department.
	 *
	 * @return the primary key of this department
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this department.
	 *
	 * @param primaryKey the primary key of this department
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the department ID of this department.
	 *
	 * @return the department ID of this department
	 */
	public long getDepartmentId();

	/**
	 * Sets the department ID of this department.
	 *
	 * @param departmentId the department ID of this department
	 */
	public void setDepartmentId(long departmentId);

	/**
	 * Returns the department name of this department.
	 *
	 * @return the department name of this department
	 */
	@AutoEscape
	public String getDepartmentName();

	/**
	 * Sets the department name of this department.
	 *
	 * @param departmentName the department name of this department
	 */
	public void setDepartmentName(String departmentName);

	/**
	 * Returns the description of this department.
	 *
	 * @return the description of this department
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this department.
	 *
	 * @param description the description of this department
	 */
	public void setDescription(String description);

	/**
	 * Returns the active ind of this department.
	 *
	 * @return the active ind of this department
	 */
	@AutoEscape
	public String getActiveInd();

	/**
	 * Sets the active ind of this department.
	 *
	 * @param activeInd the active ind of this department
	 */
	public void setActiveInd(String activeInd);

	/**
	 * Returns the creator ID of this department.
	 *
	 * @return the creator ID of this department
	 */
	@AutoEscape
	public String getCreatorId();

	/**
	 * Sets the creator ID of this department.
	 *
	 * @param creatorId the creator ID of this department
	 */
	public void setCreatorId(String creatorId);

	/**
	 * Returns the created date of this department.
	 *
	 * @return the created date of this department
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this department.
	 *
	 * @param createdDate the created date of this department
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the updated by of this department.
	 *
	 * @return the updated by of this department
	 */
	@AutoEscape
	public String getUpdatedBy();

	/**
	 * Sets the updated by of this department.
	 *
	 * @param updatedBy the updated by of this department
	 */
	public void setUpdatedBy(String updatedBy);

	/**
	 * Returns the updated date of this department.
	 *
	 * @return the updated date of this department
	 */
	public Date getUpdatedDate();

	/**
	 * Sets the updated date of this department.
	 *
	 * @param updatedDate the updated date of this department
	 */
	public void setUpdatedDate(Date updatedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Department department);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Department> toCacheModel();

	@Override
	public Department toEscapedModel();

	@Override
	public Department toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}