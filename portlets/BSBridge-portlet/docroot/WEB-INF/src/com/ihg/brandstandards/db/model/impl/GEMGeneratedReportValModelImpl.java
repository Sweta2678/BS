/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.GEMGeneratedReportVal;
import com.ihg.brandstandards.db.model.GEMGeneratedReportValModel;
import com.ihg.brandstandards.db.service.persistence.GEMGeneratedReportValPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the GEMGeneratedReportVal service. Represents a row in the &quot;GEM_GEN_RPT_VAL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.GEMGeneratedReportValModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GEMGeneratedReportValImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see GEMGeneratedReportValImpl
 * @see com.ihg.brandstandards.db.model.GEMGeneratedReportVal
 * @see com.ihg.brandstandards.db.model.GEMGeneratedReportValModel
 * @generated
 */
public class GEMGeneratedReportValModelImpl extends BaseModelImpl<GEMGeneratedReportVal>
	implements GEMGeneratedReportValModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a g e m generated report val model instance should use the {@link com.ihg.brandstandards.db.model.GEMGeneratedReportVal} interface instead.
	 */
	public static final String TABLE_NAME = "GEM_GEN_RPT_VAL";
	public static final Object[][] TABLE_COLUMNS = {
			{ "GEM_GEN_RPT_VAL_ID", Types.BIGINT },
			{ "GEM_GEN_RPT_ID", Types.BIGINT },
			{ "GEM_TEMPLATE_COL_ID", Types.BIGINT },
			{ "GEN_VAL", Types.VARCHAR },
			{ "DISP_ORDER_NBR", Types.BIGINT },
			{ "CREAT_USR_ID", Types.VARCHAR },
			{ "CREAT_TS", Types.TIMESTAMP },
			{ "LST_UPDT_USR_ID", Types.VARCHAR },
			{ "LST_UPDT_TS", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table GEM_GEN_RPT_VAL (GEM_GEN_RPT_VAL_ID LONG not null,GEM_GEN_RPT_ID LONG not null,GEM_TEMPLATE_COL_ID LONG,GEN_VAL VARCHAR(75) null,DISP_ORDER_NBR LONG,CREAT_USR_ID VARCHAR(75) null,CREAT_TS DATE null,LST_UPDT_USR_ID VARCHAR(75) null,LST_UPDT_TS DATE null,primary key (GEM_GEN_RPT_VAL_ID, GEM_GEN_RPT_ID))";
	public static final String TABLE_SQL_DROP = "drop table GEM_GEN_RPT_VAL";
	public static final String ORDER_BY_JPQL = " ORDER BY gemGeneratedReportVal.id.reportId ASC, gemGeneratedReportVal.displayOrderNumber ASC";
	public static final String ORDER_BY_SQL = " ORDER BY GEM_GEN_RPT_VAL.GEM_GEN_RPT_ID ASC, GEM_GEN_RPT_VAL.DISP_ORDER_NBR ASC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.GEMGeneratedReportVal"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.GEMGeneratedReportVal"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.GEMGeneratedReportVal"),
			true);
	public static long REPORTID_COLUMN_BITMASK = 1L;
	public static long DISPLAYORDERNUMBER_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.GEMGeneratedReportVal"));

	public GEMGeneratedReportValModelImpl() {
	}

	@Override
	public GEMGeneratedReportValPK getPrimaryKey() {
		return new GEMGeneratedReportValPK(_reportValId, _reportId);
	}

	@Override
	public void setPrimaryKey(GEMGeneratedReportValPK primaryKey) {
		setReportValId(primaryKey.reportValId);
		setReportId(primaryKey.reportId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new GEMGeneratedReportValPK(_reportValId, _reportId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((GEMGeneratedReportValPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return GEMGeneratedReportVal.class;
	}

	@Override
	public String getModelClassName() {
		return GEMGeneratedReportVal.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("reportValId", getReportValId());
		attributes.put("reportId", getReportId());
		attributes.put("columnId", getColumnId());
		attributes.put("generatedValue", getGeneratedValue());
		attributes.put("displayOrderNumber", getDisplayOrderNumber());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long reportValId = (Long)attributes.get("reportValId");

		if (reportValId != null) {
			setReportValId(reportValId);
		}

		Long reportId = (Long)attributes.get("reportId");

		if (reportId != null) {
			setReportId(reportId);
		}

		Long columnId = (Long)attributes.get("columnId");

		if (columnId != null) {
			setColumnId(columnId);
		}

		String generatedValue = (String)attributes.get("generatedValue");

		if (generatedValue != null) {
			setGeneratedValue(generatedValue);
		}

		Long displayOrderNumber = (Long)attributes.get("displayOrderNumber");

		if (displayOrderNumber != null) {
			setDisplayOrderNumber(displayOrderNumber);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public long getReportValId() {
		return _reportValId;
	}

	@Override
	public void setReportValId(long reportValId) {
		_reportValId = reportValId;
	}

	@Override
	public long getReportId() {
		return _reportId;
	}

	@Override
	public void setReportId(long reportId) {
		_columnBitmask = -1L;

		if (!_setOriginalReportId) {
			_setOriginalReportId = true;

			_originalReportId = _reportId;
		}

		_reportId = reportId;
	}

	public long getOriginalReportId() {
		return _originalReportId;
	}

	@Override
	public long getColumnId() {
		return _columnId;
	}

	@Override
	public void setColumnId(long columnId) {
		_columnId = columnId;
	}

	@Override
	public String getGeneratedValue() {
		if (_generatedValue == null) {
			return StringPool.BLANK;
		}
		else {
			return _generatedValue;
		}
	}

	@Override
	public void setGeneratedValue(String generatedValue) {
		_generatedValue = generatedValue;
	}

	@Override
	public long getDisplayOrderNumber() {
		return _displayOrderNumber;
	}

	@Override
	public void setDisplayOrderNumber(long displayOrderNumber) {
		_columnBitmask = -1L;

		_displayOrderNumber = displayOrderNumber;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public GEMGeneratedReportVal toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (GEMGeneratedReportVal)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GEMGeneratedReportValImpl gemGeneratedReportValImpl = new GEMGeneratedReportValImpl();

		gemGeneratedReportValImpl.setReportValId(getReportValId());
		gemGeneratedReportValImpl.setReportId(getReportId());
		gemGeneratedReportValImpl.setColumnId(getColumnId());
		gemGeneratedReportValImpl.setGeneratedValue(getGeneratedValue());
		gemGeneratedReportValImpl.setDisplayOrderNumber(getDisplayOrderNumber());
		gemGeneratedReportValImpl.setCreatorId(getCreatorId());
		gemGeneratedReportValImpl.setCreatedDate(getCreatedDate());
		gemGeneratedReportValImpl.setUpdatedBy(getUpdatedBy());
		gemGeneratedReportValImpl.setUpdatedDate(getUpdatedDate());

		gemGeneratedReportValImpl.resetOriginalValues();

		return gemGeneratedReportValImpl;
	}

	@Override
	public int compareTo(GEMGeneratedReportVal gemGeneratedReportVal) {
		int value = 0;

		if (getReportId() < gemGeneratedReportVal.getReportId()) {
			value = -1;
		}
		else if (getReportId() > gemGeneratedReportVal.getReportId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		if (getDisplayOrderNumber() < gemGeneratedReportVal.getDisplayOrderNumber()) {
			value = -1;
		}
		else if (getDisplayOrderNumber() > gemGeneratedReportVal.getDisplayOrderNumber()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof GEMGeneratedReportVal)) {
			return false;
		}

		GEMGeneratedReportVal gemGeneratedReportVal = (GEMGeneratedReportVal)obj;

		GEMGeneratedReportValPK primaryKey = gemGeneratedReportVal.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		GEMGeneratedReportValModelImpl gemGeneratedReportValModelImpl = this;

		gemGeneratedReportValModelImpl._originalReportId = gemGeneratedReportValModelImpl._reportId;

		gemGeneratedReportValModelImpl._setOriginalReportId = false;

		gemGeneratedReportValModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<GEMGeneratedReportVal> toCacheModel() {
		GEMGeneratedReportValCacheModel gemGeneratedReportValCacheModel = new GEMGeneratedReportValCacheModel();

		gemGeneratedReportValCacheModel.reportValId = getReportValId();

		gemGeneratedReportValCacheModel.reportId = getReportId();

		gemGeneratedReportValCacheModel.columnId = getColumnId();

		gemGeneratedReportValCacheModel.generatedValue = getGeneratedValue();

		String generatedValue = gemGeneratedReportValCacheModel.generatedValue;

		if ((generatedValue != null) && (generatedValue.length() == 0)) {
			gemGeneratedReportValCacheModel.generatedValue = null;
		}

		gemGeneratedReportValCacheModel.displayOrderNumber = getDisplayOrderNumber();

		gemGeneratedReportValCacheModel.creatorId = getCreatorId();

		String creatorId = gemGeneratedReportValCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			gemGeneratedReportValCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			gemGeneratedReportValCacheModel.createdDate = createdDate.getTime();
		}
		else {
			gemGeneratedReportValCacheModel.createdDate = Long.MIN_VALUE;
		}

		gemGeneratedReportValCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = gemGeneratedReportValCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			gemGeneratedReportValCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			gemGeneratedReportValCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			gemGeneratedReportValCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return gemGeneratedReportValCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{reportValId=");
		sb.append(getReportValId());
		sb.append(", reportId=");
		sb.append(getReportId());
		sb.append(", columnId=");
		sb.append(getColumnId());
		sb.append(", generatedValue=");
		sb.append(getGeneratedValue());
		sb.append(", displayOrderNumber=");
		sb.append(getDisplayOrderNumber());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.GEMGeneratedReportVal");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>reportValId</column-name><column-value><![CDATA[");
		sb.append(getReportValId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reportId</column-name><column-value><![CDATA[");
		sb.append(getReportId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>columnId</column-name><column-value><![CDATA[");
		sb.append(getColumnId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generatedValue</column-name><column-value><![CDATA[");
		sb.append(getGeneratedValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayOrderNumber</column-name><column-value><![CDATA[");
		sb.append(getDisplayOrderNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = GEMGeneratedReportVal.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			GEMGeneratedReportVal.class
		};
	private long _reportValId;
	private long _reportId;
	private long _originalReportId;
	private boolean _setOriginalReportId;
	private long _columnId;
	private String _generatedValue;
	private long _displayOrderNumber;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private long _columnBitmask;
	private GEMGeneratedReportVal _escapedModel;
}