/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.brandstandards.db.model.impl;

import com.ihg.brandstandards.db.model.PublishQueue;
import com.ihg.brandstandards.db.model.PublishQueueModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PublishQueue service. Represents a row in the &quot;PUBLISH_QUEUE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ihg.brandstandards.db.model.PublishQueueModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PublishQueueImpl}.
 * </p>
 *
 * @author Mummanedi
 * @see PublishQueueImpl
 * @see com.ihg.brandstandards.db.model.PublishQueue
 * @see com.ihg.brandstandards.db.model.PublishQueueModel
 * @generated
 */
public class PublishQueueModelImpl extends BaseModelImpl<PublishQueue>
	implements PublishQueueModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a publish queue model instance should use the {@link com.ihg.brandstandards.db.model.PublishQueue} interface instead.
	 */
	public static final String TABLE_NAME = "PUBLISH_QUEUE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PUBLISH_QUEUE_ID", Types.BIGINT },
			{ "PUBLISH_FILE_TXT", Types.VARCHAR },
			{ "PUBLISH_ENVIRONMENT_NM", Types.VARCHAR },
			{ "SCHED_PUBLISH_TS", Types.TIMESTAMP },
			{ "QUEUE_STAT_CD", Types.VARCHAR },
			{ "CHAIN_CD", Types.VARCHAR },
			{ "NOTIFICATION_EMAIL_ID", Types.VARCHAR },
			{ "SCHED_STRT_TS", Types.TIMESTAMP },
			{ "SCHED_END_TS", Types.TIMESTAMP },
			{ "EXPT_PROD_PUBLISH_DT", Types.TIMESTAMP },
			{ "PUBLISH_ID", Types.BIGINT },
			{ "LOCALE_LIST_TXT", Types.VARCHAR },
			{ "CREAT_USR_ID", Types.VARCHAR },
			{ "CREAT_TS", Types.TIMESTAMP },
			{ "LST_UPDT_USR_ID", Types.VARCHAR },
			{ "LST_UPDT_TS", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table PUBLISH_QUEUE (PUBLISH_QUEUE_ID LONG not null primary key,PUBLISH_FILE_TXT VARCHAR(75) null,PUBLISH_ENVIRONMENT_NM VARCHAR(75) null,SCHED_PUBLISH_TS DATE null,QUEUE_STAT_CD VARCHAR(75) null,CHAIN_CD VARCHAR(75) null,NOTIFICATION_EMAIL_ID VARCHAR(75) null,SCHED_STRT_TS DATE null,SCHED_END_TS DATE null,EXPT_PROD_PUBLISH_DT DATE null,PUBLISH_ID LONG,LOCALE_LIST_TXT VARCHAR(75) null,CREAT_USR_ID VARCHAR(75) null,CREAT_TS DATE null,LST_UPDT_USR_ID VARCHAR(75) null,LST_UPDT_TS DATE null)";
	public static final String TABLE_SQL_DROP = "drop table PUBLISH_QUEUE";
	public static final String ORDER_BY_JPQL = " ORDER BY publishQueue.publishQueueId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY PUBLISH_QUEUE.PUBLISH_QUEUE_ID DESC";
	public static final String DATA_SOURCE = "brandstandDataSource";
	public static final String SESSION_FACTORY = "BRNDSTNDSessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ihg.brandstandards.db.model.PublishQueue"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ihg.brandstandards.db.model.PublishQueue"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ihg.brandstandards.db.model.PublishQueue"),
			true);
	public static long PUBLISHENVIRONMENT_COLUMN_BITMASK = 1L;
	public static long PUBLISHID_COLUMN_BITMASK = 2L;
	public static long PUBLISHQUEUEID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ihg.brandstandards.db.model.PublishQueue"));

	public PublishQueueModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _publishQueueId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPublishQueueId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _publishQueueId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PublishQueue.class;
	}

	@Override
	public String getModelClassName() {
		return PublishQueue.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("publishQueueId", getPublishQueueId());
		attributes.put("publishFileText", getPublishFileText());
		attributes.put("publishEnvironment", getPublishEnvironment());
		attributes.put("schedulePublish", getSchedulePublish());
		attributes.put("queueStatCd", getQueueStatCd());
		attributes.put("chainCd", getChainCd());
		attributes.put("notificationEmailId", getNotificationEmailId());
		attributes.put("scheduleStart", getScheduleStart());
		attributes.put("scheduleEnd", getScheduleEnd());
		attributes.put("expectedProdPublishDt", getExpectedProdPublishDt());
		attributes.put("publishId", getPublishId());
		attributes.put("publishLocaleList", getPublishLocaleList());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedDate", getUpdatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long publishQueueId = (Long)attributes.get("publishQueueId");

		if (publishQueueId != null) {
			setPublishQueueId(publishQueueId);
		}

		String publishFileText = (String)attributes.get("publishFileText");

		if (publishFileText != null) {
			setPublishFileText(publishFileText);
		}

		String publishEnvironment = (String)attributes.get("publishEnvironment");

		if (publishEnvironment != null) {
			setPublishEnvironment(publishEnvironment);
		}

		Date schedulePublish = (Date)attributes.get("schedulePublish");

		if (schedulePublish != null) {
			setSchedulePublish(schedulePublish);
		}

		String queueStatCd = (String)attributes.get("queueStatCd");

		if (queueStatCd != null) {
			setQueueStatCd(queueStatCd);
		}

		String chainCd = (String)attributes.get("chainCd");

		if (chainCd != null) {
			setChainCd(chainCd);
		}

		String notificationEmailId = (String)attributes.get(
				"notificationEmailId");

		if (notificationEmailId != null) {
			setNotificationEmailId(notificationEmailId);
		}

		Date scheduleStart = (Date)attributes.get("scheduleStart");

		if (scheduleStart != null) {
			setScheduleStart(scheduleStart);
		}

		Date scheduleEnd = (Date)attributes.get("scheduleEnd");

		if (scheduleEnd != null) {
			setScheduleEnd(scheduleEnd);
		}

		Date expectedProdPublishDt = (Date)attributes.get(
				"expectedProdPublishDt");

		if (expectedProdPublishDt != null) {
			setExpectedProdPublishDt(expectedProdPublishDt);
		}

		Long publishId = (Long)attributes.get("publishId");

		if (publishId != null) {
			setPublishId(publishId);
		}

		String publishLocaleList = (String)attributes.get("publishLocaleList");

		if (publishLocaleList != null) {
			setPublishLocaleList(publishLocaleList);
		}

		String creatorId = (String)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}
	}

	@Override
	public long getPublishQueueId() {
		return _publishQueueId;
	}

	@Override
	public void setPublishQueueId(long publishQueueId) {
		_columnBitmask = -1L;

		if (!_setOriginalPublishQueueId) {
			_setOriginalPublishQueueId = true;

			_originalPublishQueueId = _publishQueueId;
		}

		_publishQueueId = publishQueueId;
	}

	public long getOriginalPublishQueueId() {
		return _originalPublishQueueId;
	}

	@Override
	public String getPublishFileText() {
		if (_publishFileText == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishFileText;
		}
	}

	@Override
	public void setPublishFileText(String publishFileText) {
		_publishFileText = publishFileText;
	}

	@Override
	public String getPublishEnvironment() {
		if (_publishEnvironment == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishEnvironment;
		}
	}

	@Override
	public void setPublishEnvironment(String publishEnvironment) {
		_columnBitmask |= PUBLISHENVIRONMENT_COLUMN_BITMASK;

		if (_originalPublishEnvironment == null) {
			_originalPublishEnvironment = _publishEnvironment;
		}

		_publishEnvironment = publishEnvironment;
	}

	public String getOriginalPublishEnvironment() {
		return GetterUtil.getString(_originalPublishEnvironment);
	}

	@Override
	public Date getSchedulePublish() {
		return _schedulePublish;
	}

	@Override
	public void setSchedulePublish(Date schedulePublish) {
		_schedulePublish = schedulePublish;
	}

	@Override
	public String getQueueStatCd() {
		if (_queueStatCd == null) {
			return StringPool.BLANK;
		}
		else {
			return _queueStatCd;
		}
	}

	@Override
	public void setQueueStatCd(String queueStatCd) {
		_queueStatCd = queueStatCd;
	}

	@Override
	public String getChainCd() {
		if (_chainCd == null) {
			return StringPool.BLANK;
		}
		else {
			return _chainCd;
		}
	}

	@Override
	public void setChainCd(String chainCd) {
		_chainCd = chainCd;
	}

	@Override
	public String getNotificationEmailId() {
		if (_notificationEmailId == null) {
			return StringPool.BLANK;
		}
		else {
			return _notificationEmailId;
		}
	}

	@Override
	public void setNotificationEmailId(String notificationEmailId) {
		_notificationEmailId = notificationEmailId;
	}

	@Override
	public Date getScheduleStart() {
		return _scheduleStart;
	}

	@Override
	public void setScheduleStart(Date scheduleStart) {
		_scheduleStart = scheduleStart;
	}

	@Override
	public Date getScheduleEnd() {
		return _scheduleEnd;
	}

	@Override
	public void setScheduleEnd(Date scheduleEnd) {
		_scheduleEnd = scheduleEnd;
	}

	@Override
	public Date getExpectedProdPublishDt() {
		return _expectedProdPublishDt;
	}

	@Override
	public void setExpectedProdPublishDt(Date expectedProdPublishDt) {
		_expectedProdPublishDt = expectedProdPublishDt;
	}

	@Override
	public long getPublishId() {
		return _publishId;
	}

	@Override
	public void setPublishId(long publishId) {
		_columnBitmask |= PUBLISHID_COLUMN_BITMASK;

		if (!_setOriginalPublishId) {
			_setOriginalPublishId = true;

			_originalPublishId = _publishId;
		}

		_publishId = publishId;
	}

	public long getOriginalPublishId() {
		return _originalPublishId;
	}

	@Override
	public String getPublishLocaleList() {
		if (_publishLocaleList == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishLocaleList;
		}
	}

	@Override
	public void setPublishLocaleList(String publishLocaleList) {
		_publishLocaleList = publishLocaleList;
	}

	@Override
	public String getCreatorId() {
		if (_creatorId == null) {
			return StringPool.BLANK;
		}
		else {
			return _creatorId;
		}
	}

	@Override
	public void setCreatorId(String creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	@Override
	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			PublishQueue.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PublishQueue toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PublishQueue)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PublishQueueImpl publishQueueImpl = new PublishQueueImpl();

		publishQueueImpl.setPublishQueueId(getPublishQueueId());
		publishQueueImpl.setPublishFileText(getPublishFileText());
		publishQueueImpl.setPublishEnvironment(getPublishEnvironment());
		publishQueueImpl.setSchedulePublish(getSchedulePublish());
		publishQueueImpl.setQueueStatCd(getQueueStatCd());
		publishQueueImpl.setChainCd(getChainCd());
		publishQueueImpl.setNotificationEmailId(getNotificationEmailId());
		publishQueueImpl.setScheduleStart(getScheduleStart());
		publishQueueImpl.setScheduleEnd(getScheduleEnd());
		publishQueueImpl.setExpectedProdPublishDt(getExpectedProdPublishDt());
		publishQueueImpl.setPublishId(getPublishId());
		publishQueueImpl.setPublishLocaleList(getPublishLocaleList());
		publishQueueImpl.setCreatorId(getCreatorId());
		publishQueueImpl.setCreatedDate(getCreatedDate());
		publishQueueImpl.setUpdatedBy(getUpdatedBy());
		publishQueueImpl.setUpdatedDate(getUpdatedDate());

		publishQueueImpl.resetOriginalValues();

		return publishQueueImpl;
	}

	@Override
	public int compareTo(PublishQueue publishQueue) {
		int value = 0;

		if (getPublishQueueId() < publishQueue.getPublishQueueId()) {
			value = -1;
		}
		else if (getPublishQueueId() > publishQueue.getPublishQueueId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PublishQueue)) {
			return false;
		}

		PublishQueue publishQueue = (PublishQueue)obj;

		long primaryKey = publishQueue.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PublishQueueModelImpl publishQueueModelImpl = this;

		publishQueueModelImpl._originalPublishQueueId = publishQueueModelImpl._publishQueueId;

		publishQueueModelImpl._setOriginalPublishQueueId = false;

		publishQueueModelImpl._originalPublishEnvironment = publishQueueModelImpl._publishEnvironment;

		publishQueueModelImpl._originalPublishId = publishQueueModelImpl._publishId;

		publishQueueModelImpl._setOriginalPublishId = false;

		publishQueueModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PublishQueue> toCacheModel() {
		PublishQueueCacheModel publishQueueCacheModel = new PublishQueueCacheModel();

		publishQueueCacheModel.publishQueueId = getPublishQueueId();

		publishQueueCacheModel.publishFileText = getPublishFileText();

		String publishFileText = publishQueueCacheModel.publishFileText;

		if ((publishFileText != null) && (publishFileText.length() == 0)) {
			publishQueueCacheModel.publishFileText = null;
		}

		publishQueueCacheModel.publishEnvironment = getPublishEnvironment();

		String publishEnvironment = publishQueueCacheModel.publishEnvironment;

		if ((publishEnvironment != null) && (publishEnvironment.length() == 0)) {
			publishQueueCacheModel.publishEnvironment = null;
		}

		Date schedulePublish = getSchedulePublish();

		if (schedulePublish != null) {
			publishQueueCacheModel.schedulePublish = schedulePublish.getTime();
		}
		else {
			publishQueueCacheModel.schedulePublish = Long.MIN_VALUE;
		}

		publishQueueCacheModel.queueStatCd = getQueueStatCd();

		String queueStatCd = publishQueueCacheModel.queueStatCd;

		if ((queueStatCd != null) && (queueStatCd.length() == 0)) {
			publishQueueCacheModel.queueStatCd = null;
		}

		publishQueueCacheModel.chainCd = getChainCd();

		String chainCd = publishQueueCacheModel.chainCd;

		if ((chainCd != null) && (chainCd.length() == 0)) {
			publishQueueCacheModel.chainCd = null;
		}

		publishQueueCacheModel.notificationEmailId = getNotificationEmailId();

		String notificationEmailId = publishQueueCacheModel.notificationEmailId;

		if ((notificationEmailId != null) &&
				(notificationEmailId.length() == 0)) {
			publishQueueCacheModel.notificationEmailId = null;
		}

		Date scheduleStart = getScheduleStart();

		if (scheduleStart != null) {
			publishQueueCacheModel.scheduleStart = scheduleStart.getTime();
		}
		else {
			publishQueueCacheModel.scheduleStart = Long.MIN_VALUE;
		}

		Date scheduleEnd = getScheduleEnd();

		if (scheduleEnd != null) {
			publishQueueCacheModel.scheduleEnd = scheduleEnd.getTime();
		}
		else {
			publishQueueCacheModel.scheduleEnd = Long.MIN_VALUE;
		}

		Date expectedProdPublishDt = getExpectedProdPublishDt();

		if (expectedProdPublishDt != null) {
			publishQueueCacheModel.expectedProdPublishDt = expectedProdPublishDt.getTime();
		}
		else {
			publishQueueCacheModel.expectedProdPublishDt = Long.MIN_VALUE;
		}

		publishQueueCacheModel.publishId = getPublishId();

		publishQueueCacheModel.publishLocaleList = getPublishLocaleList();

		String publishLocaleList = publishQueueCacheModel.publishLocaleList;

		if ((publishLocaleList != null) && (publishLocaleList.length() == 0)) {
			publishQueueCacheModel.publishLocaleList = null;
		}

		publishQueueCacheModel.creatorId = getCreatorId();

		String creatorId = publishQueueCacheModel.creatorId;

		if ((creatorId != null) && (creatorId.length() == 0)) {
			publishQueueCacheModel.creatorId = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			publishQueueCacheModel.createdDate = createdDate.getTime();
		}
		else {
			publishQueueCacheModel.createdDate = Long.MIN_VALUE;
		}

		publishQueueCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = publishQueueCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			publishQueueCacheModel.updatedBy = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			publishQueueCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			publishQueueCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return publishQueueCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{publishQueueId=");
		sb.append(getPublishQueueId());
		sb.append(", publishFileText=");
		sb.append(getPublishFileText());
		sb.append(", publishEnvironment=");
		sb.append(getPublishEnvironment());
		sb.append(", schedulePublish=");
		sb.append(getSchedulePublish());
		sb.append(", queueStatCd=");
		sb.append(getQueueStatCd());
		sb.append(", chainCd=");
		sb.append(getChainCd());
		sb.append(", notificationEmailId=");
		sb.append(getNotificationEmailId());
		sb.append(", scheduleStart=");
		sb.append(getScheduleStart());
		sb.append(", scheduleEnd=");
		sb.append(getScheduleEnd());
		sb.append(", expectedProdPublishDt=");
		sb.append(getExpectedProdPublishDt());
		sb.append(", publishId=");
		sb.append(getPublishId());
		sb.append(", publishLocaleList=");
		sb.append(getPublishLocaleList());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.ihg.brandstandards.db.model.PublishQueue");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>publishQueueId</column-name><column-value><![CDATA[");
		sb.append(getPublishQueueId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishFileText</column-name><column-value><![CDATA[");
		sb.append(getPublishFileText());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishEnvironment</column-name><column-value><![CDATA[");
		sb.append(getPublishEnvironment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulePublish</column-name><column-value><![CDATA[");
		sb.append(getSchedulePublish());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>queueStatCd</column-name><column-value><![CDATA[");
		sb.append(getQueueStatCd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chainCd</column-name><column-value><![CDATA[");
		sb.append(getChainCd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notificationEmailId</column-name><column-value><![CDATA[");
		sb.append(getNotificationEmailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scheduleStart</column-name><column-value><![CDATA[");
		sb.append(getScheduleStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scheduleEnd</column-name><column-value><![CDATA[");
		sb.append(getScheduleEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expectedProdPublishDt</column-name><column-value><![CDATA[");
		sb.append(getExpectedProdPublishDt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishId</column-name><column-value><![CDATA[");
		sb.append(getPublishId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishLocaleList</column-name><column-value><![CDATA[");
		sb.append(getPublishLocaleList());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PublishQueue.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PublishQueue.class
		};
	private long _publishQueueId;
	private long _originalPublishQueueId;
	private boolean _setOriginalPublishQueueId;
	private String _publishFileText;
	private String _publishEnvironment;
	private String _originalPublishEnvironment;
	private Date _schedulePublish;
	private String _queueStatCd;
	private String _chainCd;
	private String _notificationEmailId;
	private Date _scheduleStart;
	private Date _scheduleEnd;
	private Date _expectedProdPublishDt;
	private long _publishId;
	private long _originalPublishId;
	private boolean _setOriginalPublishId;
	private String _publishLocaleList;
	private String _creatorId;
	private Date _createdDate;
	private String _updatedBy;
	private Date _updatedDate;
	private long _columnBitmask;
	private PublishQueue _escapedModel;
}